<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//loaded = false
prepared = false
prevWord = ''
currWord = ''
prevWordList = ds_list_create()
words = 0

BStart = instance_create(800,1000, oButton)
BStart.content = 'BEGIN'

tmp = irandom_range(1,99)
if tmp &gt;= 10
  MinLen = 3
else
  MinLen = 4  

for (i=1; i&lt;=MinLen; i++)
  {
  tmp = irandom_range(1,26) //todo CHECK LOCALE BLYA
  prevWord+= chr(funcChrDecode(tmp))
  }  
  
Timer = 450 * MinLen
TabuList = ds_list_create()

Cube = instance_create(800,600,oGameCube)
Cube.parent = id
Cube.MinLen = MinLen
Cube.w1 = prevWord
Cube.w2 = ''
Cube.w3 = ''
Cube.w4 = ''
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if prepared
  Timer--
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if BStart&gt;0
  {
  if BStart.clicked
    {
    instance_destroy(BStart,true)
    BStart = -1
    prepared = true
    Cube.Rot = true
    currWord = string_char_at(prevWord,string_length(prevWord))
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fDebug)
draw_set_alpha(1)
draw_set_color(c_white)
draw_set_halign(fa_left)
draw_set_valign(fa_top)

//full list
for (i=0; i&lt;words; i++)
  draw_text(5,5+i*20,prevWordList[| i])
  
//timer
draw_set_font(fImpact64)
draw_set_halign(fa_center)
draw_text(800,1100,formatTimeString(Timer))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ok = true

//check len
if string_length(currWord) &lt; MinLen
  ok = false
  
//check tabu
if ok &amp;&amp; prepared
{
ds_list_clear(TabuList)
for (i=1; i&lt;string_length(prevWord); i++)
  if string_char_at(prevWord,i) != string_char_at(prevWord,string_length(prevWord))
    ds_list_add(TabuList,string_char_at(prevWord,i))
for (i=2; i&lt;=string_length(currWord); i++)
  if ds_list_find_index(TabuList, string_char_at(currWord,i)) != -1
    {
    ok = false 
    break
    } 
}
    
//check dict
if ok &amp;&amp; prepared
  {
  //first lv find
  tmpm = ds_map_find_value(global.DictDS,string_char_at(currWord,1))
  if tmpm != -1
    {
    tmpl = ds_map_find_value(tmpm,string_char_at(currWord,2))
    if tmpl != -1
      {
      tmp = ds_list_find_index(tmpl,currWord)
      if tmp != -1
        {
        prevWord = currWord
        ds_list_add(prevWordList,currWord)
        Cube.Rot = true
        Timer+= string_length(currWord)*450
        currWord = string_char_at(currWord, string_length(currWord))
        words++
        }
      }
    }
  }
  
//if neok
  //alarm anim
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !keyboard_check(vk_enter)
  {     
  if keyboard_check(vk_backspace) 
    {    
    if string_length(currWord) &gt; 1      
      currWord = string_copy(currWord,1,string_length(currWord)-1)
    }
  else
    {
    keyboard_lastchar = string_upper(keyboard_lastchar)
    if funcChrCheck(ord(keyboard_lastchar))
      currWord+= keyboard_lastchar
    keyboard_lastchar = ''                //reset lastchar if next key is ctrl, alt or similar...
    }
  Cube.w1 = currWord  
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
