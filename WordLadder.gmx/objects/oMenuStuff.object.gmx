<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>8</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = true                     //should game to draw splash 
timeout = 900
motd = ''                           //splash
motd_ready = false                //is http-request completed and content passed
stat[0] = global.versionName       //version caption
stat[1] = 'Branch: Release'           //version branch
stat[2] = global.versionName      //version status, loaded in http event
stat[3] = 'Profile: ' + global.config[?'ProfileFile'] 
if global.profile[?'PNETID'] &lt; 1  
  stat[4] = 'What is your name?'      //profile status
else
  stat[4] = 'Hello, ' + global.profile[?'PNAME']    //todo set after change display name
Tick = 0
State = 3

http_get(global.domain+'wl/getSplash.php')
http_get(global.domain+'wl/getVersion.php')
answers = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//switch state string
Tick++
if Tick &gt;= 200
  {
  Tick = 0
  State++
  if State &gt;= 5
    State = 0
  }
//http timeout
timeout--
if timeout == 0
  answers = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//not loaded
if async_load[? "status"] != 0
  exit
//response is loaded
var html = json_decode(async_load[? "result"])
if html != -1
  {
  //getSplash answered
  if !is_undefined(html[?'CONTENT'])
    {
    motd = html[?'CONTENT']
    motd_ready = true
    answers++
    exit
    }
  //getVersion answered: get version and extradict version
  if !is_undefined(html[?'VERSION'])
    {
    var v = real(html[?'VERSION'])
    if global.GameVersion &gt; v
      stat[2] = 'Server outdated'
    else if global.GameVersion &lt; v
      stat[2] = 'GAME OUTDATED'
    //check extra dict ver
    //TODO LOCALE CHECK
    //get extradict file from server
    var e = real(html[?'EXTRA']);
    if e &gt; global.config[?'ExtraDict']
      {
      //TODO: update ver after downloading;
      //TODO: downloader obj + progbar      //actual!
      //TODO: alert!
      if !directory_exists('dict')
        directory_create('dict')
      http_get_file(html[?'EXTRA_PATH'], "dict/EN_extra.dat")
      global.config[?'ExtraDict'] = e //todo replace after downloadong
      }
    answers++
    exit
    }
  //get file: check dict
  //todo: change cfg field
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//state string
drawTextPreset(fImpact64, c_white, 1, fa_right, fa_bottom)
draw_text(global.G_RIGHT-20, global.G_DOWN-2, stat[State])
//splash
if active &amp;&amp; motd_ready
  {
  draw_set_color(make_color_rgb(irandom_range(128,255), irandom_range(128,255), irandom_range(128,255)))
  draw_set_alpha(random_range(0.66,0.99))
  draw_set_halign(fa_center)
  draw_set_valign(fa_top)
  draw_text_transformed(345,369,motd,0.66,0.66,22)
  }
//http loading
if answers &lt; 2
  drawLoading(Tick*5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
