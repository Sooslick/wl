<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Arr[0] = ''
Words = 0
Mask = ''
Pos = -1

Anim = false
AnimTick = 0

parent = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Anim {
    AnimTick+=4
    if AnimTick &gt;= 255 {
        AnimTick = 0
        Anim = false
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Pos == -1
  Pos = Words-1
else if Pos &gt; 0
  Pos--
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Pos != -1 {
  Pos++
  if Pos == Words
    Pos = -1
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//variables
drawTextPreset(fImpact64, c_white, 1, fa_left, fa_top)
var j;
var xsc;
var cl;
var textleft = global.G_LEFT + 5;
//rescale long words. TODO: check screen resolution. TODO: move calculations from drawevent
if parent.MaxLen &gt;= 10
  xsc = 9 / parent.MaxLen - (parent.MaxLen%10)/100
else
  xsc = 1
//todo: rescale at addword
//fix anim color
if Anim
  cl = make_color_rgb(255,AnimTick,AnimTick)
else
  cl = c_white
//hilight
draw_sprite_ext(sSquareFaded,0,global.G_LEFT+384,662,1.5,0.28,180,cl,0.75)
//wordlist
j = 0;
if Pos == -1
  for (var i=Words-1; i&gt;=0; i--) {
    if string_length(Arr[i]) &gt;= parent.MinLen {
      draw_text_transformed(textleft,645+j*70,Arr[i],xsc,1,0)
      j++
      if j&lt;10
        draw_set_alpha(draw_get_alpha()-0.08)
      else
        break
      }
    }
else {
  for (var i=Pos; i&gt;=0; i--) {
    if string_length(Arr[i]) &gt;= parent.MinLen {
      draw_text_transformed(textleft,575+j*70,Arr[i],xsc,1,0)
      j++
      if j&lt;10
        draw_set_alpha(draw_get_alpha()-0.08)
      else
        break
      }
    }
  draw_set_alpha(0.92)
  j = -1
  for (var i=Pos+1; i&lt;Words; i++) {
    if string_length(Arr[i]) &gt;= parent.MinLen {
      draw_text_transformed(textleft,575+j*70,Arr[i],xsc,1,0)
      j--
      if j &gt; -10
        draw_set_alpha(draw_get_alpha()-0.08)
      else
        break
      }
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
