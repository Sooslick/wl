<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//pre inits
font = fImpact64
hover = false
hoverElement = -1   //-1: main, 0..N: elements
active = false      //if true = opened
clicked = false     //element clicked
clickable = true
//a = 1               //alpha

ssc = 1                     //size scale
csc = global.DRAW_SCALE     //coord scale
dsc = csc*ssc               //draw scale

arr = ds_map_create()
val = ''
num = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !active
  {
  if (window_mouse_get_x() &lt; (x + 256*ssc) *csc +global.DRAW_HOFF) &amp;&amp;  //TODO changepos  
     (window_mouse_get_x() &gt; (x - 256*ssc) *csc +global.DRAW_HOFF) &amp;&amp;   
     (window_mouse_get_y() &lt; (y +  64*ssc) *csc +global.DRAW_VOFF) &amp;&amp;     
     (window_mouse_get_y() &gt; (y -  64*ssc) *csc +global.DRAW_VOFF)      
          {
          hover = 1            //check cursor pos     //not by mouse enter/leave event
          hoverElement = -1
          }
  else
          hover = 0
  }      
else
  {
  hover = 0
  hoverElement = -1
  if (window_mouse_get_x() &lt; (x + 256*ssc) *csc +global.DRAW_HOFF) &amp;&amp;       //check vert pos
     (window_mouse_get_x() &gt; (x - 256*ssc) *csc +global.DRAW_HOFF)
        for (i=0; i&lt;=ds_map_size(arr); i++)
          if (window_mouse_get_y() &lt; (y + i*128 +  64*ssc) *csc +global.DRAW_VOFF) &amp;&amp;   //check hor   
             (window_mouse_get_y() &gt; (y + i*128 -  64*ssc) *csc +global.DRAW_VOFF)      //4 every line
                {
                hover = 1       
                hoverElement = i-1
                break
                }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if clickable
  {
  if active             //if opened
    {
    if hover
      {
      active = false
      clicked = true
      num = hoverElement
      val = arr[?num]
      }
    else
      {
      active = false
      clicked = true
      }
    }
  else
    {
    if hover
      {
      active = true
      clicked = true
      }
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//DRAW PRE-SETS
draw_set_font(font)
draw_set_color(c_white)
draw_set_halign(fa_left)
draw_set_valign(fa_center)
draw_set_alpha(1)

//MAIN DRAW BUTTON  
if !active
  {
  draw_set_alpha(hover+0.66)
  draw_sprite_ext(sList,hover,x*csc,y*csc,dsc,dsc,0,c_white,1)      //if list closed
  draw_text_transformed((x-240)*csc,y*csc,val,dsc,dsc,0)
  }
else
  {
  draw_sprite_ext(sList,2    ,x*csc,y*csc,dsc,dsc,0,c_white,1)      //if list opened
  draw_text_transformed((x-240)*csc,y*csc,val,dsc,dsc,0)
  for (i=0;i&lt;ds_map_size(arr);i++)
    {
    if hoverElement==i    
       {
       draw_set_alpha(1)                                          //list positions
       draw_sprite_ext(sList,4,x*csc,(y+128+i*128)*csc,dsc,dsc,0,c_white,1)
       }
    else
       {
       draw_set_alpha(0.66)
       draw_sprite_ext(sList,3,x*csc,(y+128+i*128)*csc,dsc,dsc,0,c_white,1)
       }
    draw_text_transformed((x-240)*csc,(y+128+i*128)*csc,arr[?i],dsc,dsc,0)
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// empty line for disable self-drawing
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
