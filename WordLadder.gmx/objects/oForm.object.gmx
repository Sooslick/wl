<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var inits
uiCreate()
font = fImpact64
contentSaved = ''
contentDraw = ''
allowClipboard = false
active = false  //form focus
hidden = false  //password
HeldBackspaceTick = 0       //Backspace fix      
cursor = true               //cursor animation
cursortick = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiDestroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>uiHoverCheck(sx,sy)
        
if !keyboard_check(vk_backspace)
  HeldBackspaceTick = 0
  
//cursor anim timer
cursortick++
if cursortick&gt;=10
  {
  cursortick = 0
  if cursor
    cursor = false
  else
    cursor = true
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active
{
/////////////////////
HeldBackspaceTick+= 1
if HeldBackspaceTick&gt;=25
  content = string_copy(content,1,string_length(content)-1)
event_user(0)
/////////////////////
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !clickable
  exit

if active
    {
    contentSaved = content
    if hover==0 {active = false}  //defocus form if clicked anywhere else
    uiOnclick()
    }
else if hover
    active = true       //else focus form
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//debug-costyl
uiRescale(490)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if useParentSurface
  exit

drawTextPreset(font, c_white, 1, fa_left, fa_center)
//MAIN DRAW BUTTON  
if active
  draw_sprite_ext(sForm,2,x,y,dsc,dsc,0,c_white,1)
else
  draw_sprite_ext(sForm,hover,x,y,dsc,dsc,0,c_white,1)
draw_set_alpha(a)
if cursor &amp;&amp; active
  draw_text_transformed((x-244),y,contentDraw+'|',tsc,dsc,0)
else
  draw_text_transformed((x-244),y,contentDraw,tsc,dsc,0)
  
uiDrawHint()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !useParentSurface
  exit

if parent &lt; 0
  exit
  
if !surface_exists(parent.ds)
  exit
  
surface_set_target(parent.ds) 
drawTextPreset(font, c_white, 1, fa_left, fa_center)
//MAIN DRAW BUTTON  
if active
  draw_sprite_ext(sForm,2,x,y,dsc,dsc,0,c_white,1)
else
  draw_sprite_ext(sForm,hover,x,y,dsc,dsc,0,c_white,1)
draw_set_alpha(a)
if cursor &amp;&amp; active
  draw_text_transformed((x-244),y,contentDraw+'|',tsc,dsc,0)
else
  draw_text_transformed((x-244),y,contentDraw,tsc,dsc,0)
  
uiDrawHint()
  
surface_reset_target()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = false
content = contentSaved
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !active
  exit

if !keyboard_check(vk_enter)
  {  
  if keyboard_check(vk_control)     //clipboard processor
    if keyboard_check(ord('V'))
      if allowClipboard
        if clipboard_has_text()
          if string_length(clipboard_get_text()) &lt; 16
            {
            content = clipboard_get_text()
            event_user(0)
            } 
  if keyboard_check(vk_backspace)                           //Hold Fixed in &lt;backspace event&gt;
      content = string_copy(content,1,string_length(content)-1)
  else
    //checking adekvate symbola
    if (ord(keyboard_lastchar)&gt;=32) &amp;&amp; (ord(keyboard_lastchar)&lt;=255) &amp;&amp; (string_length(content)&lt;16)
//    if string_length(content)&lt;48
        if keyboard_lastchar=='#'       //special symbol
          content+= '\#'
        else
          content+= keyboard_lastchar
    //else
    //  play error sound
  keyboard_lastchar = ''                //reset lastchar if next key is ctrl, alt or similar...
  if hidden
    {
    contentDraw = ''
    for (var i=0; i&lt;string_length(content); i++)
      contentDraw+= '*'
    }
  else
    contentDraw = content
  uiRescale(490)
  }
//save form content by pressing enter
else
  {
  active = false
  contentSaved = content
  uiOnclick()
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
