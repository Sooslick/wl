<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>OnclickEvent = 0
//Screen Resolution list
bSelector = instance_create(300,100,oList)
bSelector.val = string(global.WIN_WIDTH) + 'x' + string(global.WIN_HEIGHT)
bSelector.num = -1
bSelector.depth--
bSelector.StartDepth = bSelector.depth
var DGW = display_get_width();
var DGH = display_get_height();
if global.config[?'Widescreen']
  {
  ds_map_add(bSelector.arr,0,'1024x576')
  if (DGW&gt;=1152)&amp;&amp;(DGH&gt;=648) ds_map_add(bSelector.arr,1,'1152x648')
  if (DGW&gt;=1280)&amp;&amp;(DGH&gt;=720) ds_map_add(bSelector.arr,2,'1280x720') 
  if (DGW&gt;=1366)&amp;&amp;(DGH&gt;=768) ds_map_add(bSelector.arr,3,'1366x768') 
  if (DGW&gt;=1536)&amp;&amp;(DGH&gt;=864) ds_map_add(bSelector.arr,4,'1536x864') 
  if (DGW&gt;=1600)&amp;&amp;(DGH&gt;=900) ds_map_add(bSelector.arr,5,'1600x900') 
  if (DGW&gt;=1920)&amp;&amp;(DGH&gt;=1080) ds_map_add(bSelector.arr,6,'1920x1080')
  }                            
else
  {
  ds_map_add(bSelector.arr,0,'800x600') 
  if (DGW&gt;=1024)&amp;&amp;(DGH&gt;=768) ds_map_add(bSelector.arr,1,'1024x768') 
  if (DGW&gt;=1152)&amp;&amp;(DGH&gt;=864) ds_map_add(bSelector.arr,2,'1152x864')
  if (DGW&gt;=1280)&amp;&amp;(DGH&gt;=960) ds_map_add(bSelector.arr,3,'1280x960')
  if (DGW&gt;=1400)&amp;&amp;(DGH&gt;=1050) ds_map_add(bSelector.arr,4,'1400x1050') 
  if (DGW&gt;=1440)&amp;&amp;(DGH&gt;=1080) ds_map_add(bSelector.arr,5,'1440x1080') 
  if (DGW&gt;=1600)&amp;&amp;(DGH&gt;=1200) ds_map_add(bSelector.arr,6,'1600x1200') 
  }
//FULLSCREEN SWITCH
bFull = instance_create(300,260,oCheckBox) 
bFull.content = 'Fullscreen'
bFull.checked = global.config[?'Fullscreen']
with (bFull) {uiRescale(375)}
//WIdESCREEN SWITCH
bWide = instance_create(300,420,oCheckBox) 
bWide.content = 'Widescreen'
bWide.checked = global.config[?'Widescreen']
with (bWide) {uiRescale(375)}
//SHOWLOGO SWITCH
bShowLogo = instance_create(300,580,oCheckBox)
bShowLogo.content = 'Show Logo'
bShowLogo.checked = global.config[?'ShowLogo']
with (bShowLogo) {uiRescale(375)}
//LOCALISATION LIST aka LOCALE (unclickable) TODO!
bLang = instance_create(950,100,oList)
ds_map_add(bLang.arr,0,'English')
ds_map_add(bLang.arr,1,'Russian')
bLang.num = global.config[?'Localization']
bLang.val = bLang.arr[?global.config[?'Localization']]
bLang.clickable = false
//todo clickable -&gt; list
bLang.parent = id
bLang.useParentSurface = true
bLang.sx = 1000
bLang.sy = 280
//Sound &amp; music: MASTER SLIDER
bMaster = instance_create(950,260,oSlider)
bMaster.content = 'MASTER'
bMaster.currval = global.config[?'Master']
//Sound &amp; music: SOUND SLIDER
bSound = instance_create(950,420,oSlider)
bSound.content = 'SOUND'
bSound.currval = global.config[?'Sound']
//Sound &amp; music: MUSIC SLIDER
bMusic = instance_create(950,580,oSlider)
bMusic.content = 'MUSIC'
bMusic.currval = global.config[?'Music']
//BACK BUTTON
bBack = instance_create(300,800,oButton)
bBack.content = 'BACK'
//RESTORE DEFAULTS BUTTON
bReset = instance_create(1200,800,oButton)
bReset.content = 'RESTORE DEFAULTS'
bReset.font = fImpact64  
with (bReset) {uiRescale(500)}
//CLICKABLE LIST
alist = ds_list_create()
ds_list_add(alist, bSelector,bFull,bWide,bShowLogo,/*bLang,*/bMaster,bSound,bMusic,bBack,bReset)
//CLICKABLES GENERAL FIELDS REINIT
for (var i=0; i&lt;ds_list_size(alist); i++) {
  alist[|i].parent = id
  alist[|i].useParentSurface = true
  alist[|i].sx = alist[|i].x+50
  alist[|i].sy = alist[|i].y+180
  }
//surface init
ds = surface_create(1500,900)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//CONFIG FIELDS
funcSetWinResFromString(bSelector.val)
global.config[?'ShowLogo'] = bShowLogo.checked
global.config[?'Fullscreen'] = bFull.checked
global.config[?'Widescreen'] = bWide.checked
global.config[?'Localization'] = bLang.num
global.config[?'Master'] = bMaster.currval
global.config[?'Sound'] = bSound.currval
global.config[?'Music'] = bMusic.currval
funcCfgWrite()
//mem free
instance_destroy(bSelector,true)
instance_destroy(bFull,true)
instance_destroy(bWide,true)
instance_destroy(bLang,true)
instance_destroy(bShowLogo,true)
instance_destroy(bReset,true)
instance_destroy(bMaster,true)
instance_destroy(bSound,true)
instance_destroy(bMusic,true)
instance_destroy(bBack,true)
ds_list_destroy(alist)
if surface_exists(ds)
  surface_free(ds)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ui clicked</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//bSELECTOR LIST -&gt; RES CHANGE
if bSelector.clicked {
  if bSelector.active {
    uiSetClickable(alist, false)
    bSelector.clickable = true
    }
  else {
    uiSetClickable(alist, true)
    funcSetWinResFromString(bSelector.val)
    funcResChanged()
    }
  }
//FULLSCREEN SWITCH
else if bFull.clicked {
  funcSetWinResFromString(bSelector.val)
  global.config[?'Fullscreen'] = bFull.checked
  funcResChanged()      //Instant switch full/window and recalc globals
  //bugs with surfaces and gui?
  }
//WIDESCREEN SWITCH
else if bWide.clicked {
  ds_map_clear(bSelector.arr)
  var DGW = display_get_width();
  var DGH = display_get_height();
  if bWide.checked {
    ds_map_add(bSelector.arr,0,'1024x576')
    if (DGW&gt;=1152)&amp;&amp;(DGH&gt;=648) ds_map_add(bSelector.arr,1,'1152x648')
    if (DGW&gt;=1280)&amp;&amp;(DGH&gt;=720) ds_map_add(bSelector.arr,2,'1280x720') 
    if (DGW&gt;=1366)&amp;&amp;(DGH&gt;=768) ds_map_add(bSelector.arr,3,'1366x768') 
    if (DGW&gt;=1536)&amp;&amp;(DGH&gt;=864) ds_map_add(bSelector.arr,4,'1536x864') 
    if (DGW&gt;=1600)&amp;&amp;(DGH&gt;=900) ds_map_add(bSelector.arr,5,'1600x900') 
    if (DGW&gt;=1920)&amp;&amp;(DGH&gt;=1080) ds_map_add(bSelector.arr,6,'1920x1080')
    }                            
  else {
    ds_map_add(bSelector.arr,0,'800x600') 
    if (DGW&gt;=1024)&amp;&amp;(DGH&gt;=768) ds_map_add(bSelector.arr,1,'1024x768') 
    if (DGW&gt;=1152)&amp;&amp;(DGH&gt;=864) ds_map_add(bSelector.arr,2,'1152x864')
    if (DGW&gt;=1280)&amp;&amp;(DGH&gt;=960) ds_map_add(bSelector.arr,3,'1280x960')
    if (DGW&gt;=1400)&amp;&amp;(DGH&gt;=1050) ds_map_add(bSelector.arr,4,'1400x1050') 
    if (DGW&gt;=1440)&amp;&amp;(DGH&gt;=1080) ds_map_add(bSelector.arr,5,'1440x1080') 
    if (DGW&gt;=1600)&amp;&amp;(DGH&gt;=1200) ds_map_add(bSelector.arr,6,'1600x1200') 
    }
  }
//RESET
else if bReset.clicked {
  //TODO confirm button
  //Reset button properties
  bReset.checked = true
  bReset.content = 'RESTORED'
  //cfg and buttons
  global.config[?'ShowLogo'] = true
  bShowLogo.checked = true
  global.config[?'ScreenW'] = display_get_width()
  global.config[?'ScreenH'] = display_get_height()
  bSelector.val = string(global.config[?'ScreenW']) + 'x' + string(global.config[?'ScreenH'])
  bSelector.num = -1
  global.config[?'Fullscreen'] = true
  bFull.checked = true
  global.config[?'Master'] = 100
  bMaster.currval = 100
  global.config[?'Sound'] = 100
  bSound.currval = 100
  global.config[?'Music'] = 100
  bMusic.currval = 100
  funcResChanged()
  }
else if bBack.clicked
  //parent - oMenuRuler
  //parent.bAuthors - target button
  with parent.bOptions {uiOnclick()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !surface_exists(ds)
  ds = surface_create(1024,1024)
surface_set_target(ds)
draw_clear_alpha(0,0)
surface_reset_target()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
