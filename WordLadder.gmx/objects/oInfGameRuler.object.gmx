<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>OnclickEvent = 1
//cfg + general game vars
gameReadSettings()
gameSetGeneralVars()
//game objects and obj's vars (eg from cfg)
gameGeneralObjCreate(30)
gameSetFirstWord()

if global.profile[?'ENDSAVED'] &gt; 0 {
  //restore game variables
  var wlist = global.profile[?'ENDWORDLIST']
  if global.profile[?'ENDWORDS'] &gt; 0
    prevWord = wlist[| global.profile[?'ENDWORDS'] - 1 ]
  MinLen = global.profile[?'ENDMINLEN']
  DecQty = global.profile[?'ENDDEC']
  //restore wordlist
  for (var i=0; i&lt;global.profile[?'ENDWORDS']; i++)
    wordlistAddWord(wl, wlist[|i])
  //restore cube
  var www = global.profile[?'ENDWORDS'] - 1
  if www &gt;= 0 {
    Cube.w1 = wlist[| www]
    www--
    if www &gt;= 0 {
      Cube.w2 = wlist[| www]
      www--
      if www &gt;= 0 {
        Cube.w3 = wlist[| www]
        www--
        if www &gt;= 0
          Cube.w4 = wlist[| www]
        }
      }
    }
  Cube.MinLen = MinLen
  Cube.NewLen = MinLen
  Cube.y = 600+MinLen*32
  //restore letters
  l.TabuQty = global.profile[?'ENDBANQTY']
  l.TabuString = global.profile[?'ENDBBSTR']
  l.TabuPB.Prog = global.profile[?'ENDBANPROG']
  l.TabuPB.Req = global.profile[?'ENDBANREQ']
  with l lettersUpdate()
  //restore abil counters
  Abil.Value[0] = global.profile[?'ENDSCORE']
  Abil.Value[1] = global.profile[?'ENDSHA'] - global.profile[?'ENDSHU']
  Abil.Value[2] = global.profile[?'ENDTTA'] - global.profile[?'ENDTTU']
  //restore progbars
  DecPB.Req = global.profile[?'ENDDECREQ']
  DecPB.Prog = global.profile[?'ENDDECPROG']
  ShiftPB.Req = global.profile[?'ENDSHIFTREQ']
  ShiftPB.Prog = global.profile[?'ENDSHIFTPROG']
  TTPB.Req = global.profile[?'ENDTTREQ']
  TTPB.Prog = global.profile[?'ENDTTPROG']
  //restore stat fields from save
  Stat.pp = global.profile[?'ENDSCORE']
  Stat.words = global.profile[?'ENDWORDS']
  Stat.letters = global.profile[?'ENDL']
  Stat.lettersa = global.profile[?'ENDLA']
  Stat.lettersb = global.profile[?'ENDLB']
  Stat.attempts = global.profile[?'ENDAT']
  Stat.ticks = global.profile[?'ENDTIME']
  Stat.shiftsa = global.profile[?'ENDSHA']
  Stat.shiftsu = global.profile[?'ENDSHU']
  Stat.unbansa = global.profile[?'ENDTTA']
  Stat.unbansu = global.profile[?'ENDTTU']
  Stat.banned = global.profile[?'ENDBANNED']
  Stat.tabus = global.profile[?'ENDFAILBAN']
  Stat.dicts = global.profile[?'ENDFAILTYP']
  Stat.prevs = global.profile[?'ENDFAILREP']
  Stat.lens = global.profile[?'ENDFAILLEN']
  Stat.decrements = global.profile[?'ENDDEC']
  //todo gigaproblem: stat duplicate at save/load
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if BStart != -1
  instance_destroy(BStart, true)
if bBack != -1 {
  instance_destroy(bBack, true)
  instance_destroy(bEnd, true)
  }
instance_destroy(wl, true)
instance_destroy(l, true)
instance_destroy(Abil, true)
instance_destroy(Timer, true)
instance_destroy(DecPB, true)
instance_destroy(ShiftPB, true)
instance_destroy(TTPB, true)
instance_destroy(Cube, true)
instance_destroy(Bg, true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if prepared {
  Stat.ticks+= Timer.Interval
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if BStart&gt;0 {
  if BStart.clicked {
    instance_destroy(BStart,true)
    BStart = -1
    prepared = true
    currWord = string_char_at(prevWord,string_length(prevWord))
    Cube.Rot = true
    if global.profile[?'ENDSAVED'] == 0
      global.profile[?'PSGAMES']++
    exit
    }
  }
if bBack != -1 {
  if bBack.clicked {
    global.profile[?'ENDTIME'] = Stat.ticks
    gameLeave()
    }
  else if bEnd.clicked {
    with Stat {event_user(0)}
    instance_destroy(self, true)
    //save reset
    global.profile[?'ENDSAVED'] = 0
    global.profile[?'ENDMINLEN'] = 0
    global.profile[?'ENDSCORE'] = 0
    global.profile[?'ENDL'] = 0
    global.profile[?'ENDLA'] = 0
    global.profile[?'ENDLB'] = 0
    global.profile[?'ENDAT'] = 0
    global.profile[?'ENDTIME'] = 0
    global.profile[?'ENDSHA'] = 0
    global.profile[?'ENDSHU'] = 0
    global.profile[?'ENDTTA'] = 0
    global.profile[?'ENDTTU'] = 0
    global.profile[?'ENDBANNED'] = 0
    global.profile[?'ENDFAILBAN'] = 0
    global.profile[?'ENDFAILTYP'] = 0
    global.profile[?'ENDFAILREP'] = 0
    global.profile[?'ENDFAILLEN'] = 0
    global.profile[?'ENDBANQTY'] = 0
    global.profile[?'ENDBANPROG'] = 0
    global.profile[?'ENDBANREQ'] = 0
    global.profile[?'ENDSHIFTPROG'] = 0
    global.profile[?'ENDSHIFTREQ'] = 0
    global.profile[?'ENDTTPROG'] = 0
    global.profile[?'ENDTTREQ'] = 0
    global.profile[?'ENDDEC'] = 0
    global.profile[?'ENDDECPROG'] = 0
    global.profile[?'ENDDECREQ'] = 0
    global.profile[?'ENDBB'] = 0
    global.profile[?'ENDBBSTR'] = ''
    global.profile[?'ENDWORDS'] = 0
    if ds_exists(global.profile[?'ENDWORDLIST'], ds_type_list)
      ds_list_destroy(global.profile[?'ENDWORDLIST'])
    ds_map_add_list(global.profile, 'ENDWORDLIST', ds_list_create())
    }
  }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>click ui</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Stat.attempts++

//check len
if string_length(currWord) &lt; MinLen {
  Cube.LengthErr = true
  Stat.lens++
  exit
  }
  
//check tabu
for (i=2; i&lt;=string_length(currWord); i++) {
  j = ds_list_find_index(l.TabuList, string_char_at(currWord,i))
  if (j != -1) &amp;&amp; (j != TTNum) {
    Cube.TabuErr = true
    Cube.TabuErrNum = j
    Stat.tabus++
    exit
    } 
  }

//check prevword
if wordlistTyped(wl,currWord, true) {
  Stat.prevs++
  exit
  }                                                      
    
//check dict
var tmpm, tmpl, tmp;
  //first lv find
  tmpm = ds_map_find_value(global.DictDS,string_char_at(currWord,1))
  if tmpm != -1
    {
    tmpl = ds_map_find_value(tmpm,string_char_at(currWord,2))
    if tmpl != -1
      {
      tmp = ds_list_find_index(tmpl,currWord)
      if tmp != -1 {
        gameWordAcceptedSolo()
        //save game state
        global.profile[?'ENDSAVED'] = 1
        global.profile[?'ENDMINLEN'] = MinLen
        global.profile[?'ENDSCORE'] = Stat.pp
        global.profile[?'ENDL'] = Stat.letters
        global.profile[?'ENDLA'] = Stat.lettersa
        global.profile[?'ENDLB'] = Stat.lettersb
        global.profile[?'ENDAT'] = Stat.attempts
        global.profile[?'ENDTIME'] = Stat.ticks
        global.profile[?'ENDSHA'] = Stat.shiftsa
        global.profile[?'ENDSHU'] = Stat.shiftsu
        global.profile[?'ENDTTA'] = Stat.unbansa
        global.profile[?'ENDTTU'] = Stat.unbansu
        global.profile[?'ENDBANNED'] = Stat.banned
        global.profile[?'ENDFAILBAN'] = Stat.tabus
        global.profile[?'ENDFAILTYP'] = Stat.dicts
        global.profile[?'ENDFAILREP'] = Stat.prevs
        global.profile[?'ENDFAILLEN'] = Stat.lens
        global.profile[?'ENDBANQTY'] = l.TabuQty
        global.profile[?'ENDBANPROG'] = l.TabuPB.Prog
        global.profile[?'ENDBANREQ'] = l.TabuPB.Req
        global.profile[?'ENDSHIFTPROG'] = ShiftPB.Prog
        global.profile[?'ENDSHIFTREQ'] = ShiftPB.Req
        global.profile[?'ENDTTPROG'] = TTPB.Prog
        global.profile[?'ENDTTREQ'] = TTPB.Req
        global.profile[?'ENDDEC'] = DecQty
        global.profile[?'ENDDECPROG'] = DecPB.Prog
        global.profile[?'ENDDECREQ'] = DecPB.Req
        global.profile[?'ENDBB'] = ds_list_size(l.TabuList)
        global.profile[?'ENDBBSTR'] = ''
        for (var i=0; i&lt;ds_list_size(l.TabuList); i++)
          global.profile[?'ENDBBSTR']+= l.TabuList[|i]
        global.profile[?'ENDWORDS'] = Stat.words
        ds_list_add(global.profile[?'ENDWORDLIST'], prevWord)
        }
      else {
        Cube.LengthErr = true
        Stat.dicts++
        }
      }
    else {
      Cube.LengthErr = true
      Stat.dicts++
      }
    }
  else {
    Cube.LengthErr = true
    Stat.dicts++
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enter pressed event</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//TabuHilight
if TT {
  var xt = Cube.x;
  if Shift xt+= 72
  draw_set_alpha(0.2)
  draw_set_color(c_white)
  j = MinLen*32
  draw_rectangle(xt-j+TTNum*72,Cube.y-j-100,xt-j+TTNum*72+66,Cube.y-j-34,false)
  }

if paused {
  drawTextPreset(fImpact96, c_white, 1, fa_left, fa_top)
  //background + border
  draw_sprite_ext(sPixel,0,50,50,1100,1100,0,0,0.75)
  for (var i=0; i&lt;4; i++)
    draw_rectangle(50+i,50+i, 1150-i, 1150-i, true)
  //caption
  draw_text(100,60, 'ENDLESS GAME')
  //hint
  draw_set_font(fCube)
  draw_text(65, 180, 'Press Esc to continue game')
  //stat
  draw_text(65, 260, 'GAME STAT#Playtime: ' + formatTimeString(Stat.ticks) + 
    '#Words: ' + string(Stat.words) + 
    '#Letters accepted: ' + string(Stat.lettersa) + 
    '#Letters typed: ' + string(Stat.letters))
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//alpha background
draw_sprite_ext(sPixel,0,0,0,1600,1200,0,0,0.5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gameAnykeySolo(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
