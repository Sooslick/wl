<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>B1 = instance_create(300,200,oButton)
B1.content = 'DICT W'

B2 = instance_create(300,450,oButton)
B2.content = 'DICT R'

B3 = instance_create(300,700,oButton)
B3.content = 'FADE'

B4 = instance_create(300,950,oButton)
B4.content = 'JSON'
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(B1,true)
instance_destroy(B2,true)
instance_destroy(B3,true)
instance_destroy(B4,true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if B1.clicked
  {
  B1.clicked = false
  fn = get_open_filename("txt file with dict|*.txt","")
  if fn != ""
    event_user(0)
  }
else if B2.clicked
  {
  instance_create(0,0,oDevDictRd)
  instance_destroy(self,true)
  }
else if B3.clicked
  {
  B3.clicked = false
  fn = get_save_filename("PNG File|*.png","")
  if fn != ""
    {
    draw_clear_alpha(c_black,0)
    draw_set_color(c_white)
    for (i=0; i&lt;256; i++)
      {
      draw_set_alpha(i/256)
      draw_line(800+i,100,800+i,356)
      }
    screen_save(fn)
    }
  }
else if B4.clicked
  {
  B4.clicked = false
  s = json_encode(global.profile)
  clipboard_set_text(s)
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//making .dat with dictionary
//variable f defined in clicked event
fsn = get_save_filename_ext('WL Dict File|.dat',"",working_directory,'WTF')
//fsn = "CONVERTED.dat"
if fsn != ""
  {
  f = file_text_open_read(fn)
  fs = file_bin_open(fsn,1)
  //Cycle read start
  s = file_text_read_string(f)
  while s != ''
    {
    q = string_length(s)
    s = string_upper(s)
    ok = funcChrCheck(s)            //check line for mask 0..9A..Z
    if ok
      {
      file_bin_write_byte(fs,q)                                     //qty byte
      for (i=1; i&lt;=q; i++)
        file_bin_write_byte(fs,funcChrEncode(ord(string_char_at(s,i))))    //chr byte
      }
    file_text_readln(f)
    s = file_text_read_string(f)
    }
  file_text_close(f)
  file_bin_close(fs)
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>action_another_room(rMenu)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
