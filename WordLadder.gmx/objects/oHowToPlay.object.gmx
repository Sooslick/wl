<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>prestart = false
prepared = false
prevWord = 'WORD'
currWord = ''

wl = instance_create(0,0,oWordList)
wl.parent = id

OnclickEvent = 2
BStart = instance_create(800,1000, oButton)
BStart.content = 'BEGIN'
BStart.parent = id

//startgame params from global.custom
Timer = instance_create(0,0,oGameTimer)
Timer.Timer = 60000

l = instance_create(0,0,oGameLetters)
l.parent = id

MinLen = 4
MaxLen = 9              

Shift = false                           //using of ability flag
TT = false                              //using of ability TabuType flag
TTNum = -1                              //letter number  
 
PP = instance_create(0,0,oGameAbil)
PP.active = false  
PP.Value[1] = 2
PP.Value[2] = 2
PP.parent = id        

Cube = instance_create(800,720,oGameCube)
Cube.parent = id
Cube.MinLen = MinLen
Cube.NewLen = MinLen
Cube.w1 = prevWord
Cube.Letters = l

TextPt = 0
TextArr[0] = 'HOW TO PLAY'
TextArr[1] = 'This is your play area.'
TextArr[2] = 'You need to type words in the center square.'
TextArr[3] = 'When you finish typing, press Enter to proceed to the next word.'
TextArr[4] = 'Each word begins with the last letter of previous word.'
TextArr[5] = "You can't type a word shorter than previous one... "
TextArr[6] = 'But you can type a longer one.'
TextArr[7] = "At the left side, there's a list of words you've already used."
TextArr[8] = 'When you begin typing, the list scrolls to the word that begin the same way.'
TextArr[9] = "This way, you can check if you've used this word before."
TextArr[10] = "You can't enter the same word twice."
TextArr[11] = 'And now you have a time limit.'
TextArr[12] = 'Each accepted word grants you bonus time.'
TextArr[13] = "If you make mistakes in words, you'll get a time penalty."
TextArr[14] = "And you'll have to erase your word and correct the mistakes."
TextArr[15] = 'You can see crossed out letters. They are banned.'
TextArr[16] = 'Banned letters are randomly chosen for each word.'
TextArr[17] = 'The game declines words that contain at least one banned letter.'
TextArr[18] = 'At the right side, there are several counters.'
TextArr[19] = 'This is your game score and special ability counters.'
TextArr[20] = 'In case of trouble you can use Shift or Unban abilities.'
TextArr[21] = 'Shift allows you to write a word that begins with penultimate letter of previous word.'
TextArr[22] = 'To use it, press Up and Down buttons.'
TextArr[23] = 'Unban allows you to pick a banned letter to use in your word.'
TextArr[24] = 'To switch unbanned letters, press Tab.'
TextArr[25] = "The game score doesn't affect the gameplay, it shows your success rate."
TextArr[26] = 'However, the more points you score, the more often you can use special abilities.'
TextArr[27] = 'You can see green letters after banned ones.'
TextArr[28] = "It's not neccessary to use them."
TextArr[29] = 'But you earn extra points for using each green letter.'
TextArr[30] = "That's all you need to know about the game."
TextArr[31] = 'Good luck.'
TextTimer = 210

TypeStr = 'EAL'
TypeChr = 1
TypeTimer = 6
TypeTimerReset = 6
TypeEnable = false
TypeBan = ''
TypeBanChr = 1
TypeGreen = ''
TypeGreenChr = 1

Fading = false
FadingOp = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if prepared
  {
  if TypeEnable
    {
    TypeTimer-= 0.5
    if TypeTimer &lt;= 0
      {
      TypeTimer = TypeTimerReset
      event_user(0)
      }
    }  
    
  TextTimer-= 0.5
  if TextTimer &lt;= 0
    {
    switch TextPt
      {
      case 1:
        TextPt = 2
        TextTimer = 240
        TypeStr = 'EAL'
        TypeChr = 1
        TypeTimer = 24
        TypeTimerReset = 8
        TypeEnable = true
        break
      case 2:
        TextPt = 3
        TextTimer = 240
        TypeStr = '#'
        TypeChr = 1
        TypeTimer = 24
        TypeEnable = true
        break
      case 3:
        TextPt = 4
        TextTimer = 300
        TypeStr = 'EAF#ALL#OUD#EAR#'
        TypeChr = 1
        TypeTimer = 15
        TypeTimerReset = 7
        TypeEnable = true
        break
      case 4:
        TextPt = 5
        TextTimer = 210
        TypeStr = 'AWp#'
        TypeChr = 1
        TypeTimer = 25
        TypeTimerReset = 15
        TypeEnable = true
        break
      case 5:
        TextPt = 6
        TextTimer = 210
        TypeStr = 'ER#'
        TypeChr = 1
        TypeTimer = 20
        TypeTimerReset = 12
        TypeEnable = true
        break
      case 6:
        TextPt = 7
        TextTimer = 210
        TypeStr = 'EACT#OWER#'
        TypeChr = 1
        TypeTimer = 15
        TypeTimerReset = 8
        TypeEnable = true
        break
      case 7:
        TextPt = 8
        TextTimer = 240
        TypeStr = 'EpA'
        TypeChr = 1
        TypeTimer = 25
        TypeTimerReset = 16
        TypeEnable = true
        break
      case 8:
        TextPt = 9
        TextTimer = 210
        break
      case 9:
        TextPt = 10
        TextTimer = 210
        TypeStr = 'CT#pppbbbb'
        TypeChr = 1
        TypeTimer = 24
        TypeTimerReset = 8
        TypeEnable = true
        break
      case 10:
        TextPt = 11
        TextTimer = 210
        Timer.active = true
        Timer.Timer = 60000
        Timer.LastTime = current_time
        break
      case 11:
        TextPt = 12
        TextTimer = 240
        TypeStr = 'OUTE#ppRROR#EpSpET#'
        TypeChr = 1
        TypeTimer = 16
        TypeTimerReset = 7
        TypeEnable = true
        break
      case 12:
        TextPt = 13
        TextTimer = 240
        TypeStr = 'RMP#'
        TypeChr = 1
        TypeTimer = 33
        TypeTimerReset = 10
        TypeEnable = true
        break
      case 13:
        TextPt = 14
        TextTimer = 210
        TypeStr = 'bbpUMP#'
        TypeChr = 1
        TypeTimer = 33
        TypeTimerReset = 8
        TypeEnable = true
        break
      case 14:
        TextPt = 15
        TextTimer = 210
        l.TabuQty = 1
        l.TabuString = 'ABUSERANDOMZRDERQW'
        TypeStr = 'OINT#'
        TypeChr = 1
        TypeTimer = 4
        TypeTimerReset = 4
        TypeEnable = true
        break
      case 15:
        TextPt = 16
        TextTimer = 270
        TypeStr = 'UNER#ANDOM#ApGNET#'
        TypeChr = 1
        TypeTimer = 10
        TypeTimerReset = 8
        TypeEnable = true
        break
      case 16:
        TextPt = 17
        TextTimer = 270
        TypeStr = 'OSTER#ppppppbbbbb'
        TypeChr = 1
        TypeTimer = 20
        TypeTimerReset = 10
        TypeEnable = true
        break
      case 17: case 18: case 19:
        TextPt++
        TextTimer = 240
        PP.active = true
        PP.Anim = true
        PP.AnimLine = 0
        PP.AnimCl = c_green
        break
      case 20:
        TextPt = 21
        TextTimer = 270
        TypeStr = 'dppppRpppbNpIGMA'
        TypeChr = 1
        TypeTimer = 25
        TypeTimerReset = 10
        TypeEnable = true
        break
      case 21:
        TextPt = 22
        TextTimer = 240
        TypeStr = '#pppdudududUTANT#'
        TypeChr = 1
        TypeTimer = 3
        TypeTimerReset = 9
        TypeEnable = true
        break
      case 22:
        TextPt = 23
        TextTimer = 270
        TypeStr = 'RADER#'
        TypeChr = 1
        TypeTimer = 25
        TypeTimerReset = 9
        TypeEnable = true
        break
      case 23:
        TextPt = 24
        TextTimer = 240
        TypeStr = 'tpp#'
        TypeChr = 1
        TypeTimer = 25
        TypeTimerReset = 15
        TypeEnable = true
        break
      case 24:
        TextPt = 25
        TextTimer = 240
        TypeStr = 'EPORT#ICKET#HOUGH#EALTH#UNGER#EDUCE#'
        TypeChr = 1
        TypeTimer = 15
        TypeTimerReset = 8
        TypeEnable = true
        break
      case 25:
        TextPt = 26
        TextTimer = 240
        PP.Value[1]++
        PP.Anim = true
        PP.AnimLine = 1
        PP.AnimCl = c_green
        break
      case 26:
        TextPt = 27
        TextTimer = 240
        TypeStr = 'XPECT#pENNIS#'
        TypeChr = 1
        TypeTimer = 15
        TypeTimerReset = 8
        TypeEnable = true
        l.TargetQty = 1
        l.TargetString = 'TGHZK'
        break
      case 27:
        TextPt = 28
        TextTimer = 240
        TypeStr = 'HOULD'
        TypeChr = 1
        TypeTimer = 15
        TypeTimerReset = 12
        TypeEnable = true
        break
      case 28:
        TextPt = 29
        TextTimer = 270
        TypeStr = '#ASHING#pRIZpZLY#'
        TypeChr = 1
        TypeTimer = 15
        TypeTimerReset = 10
        TypeEnable = true
        break
      case 29:
        TextPt = 30
        TextTimer = 240
        TypeStr = 'ARDMAN#ETWORK#INGDOM#ILLION#OTHING#ENERAL#ICENCE#DUCATE#CLIPSE#LLIPSE#FFECTIVE#EEEEEEEEEEEEEEEEE'
        TypeChr = 1
        TypeTimer = 15
        TypeTimerReset = 5
        TypeEnable = true
        l.TabuQty = 0
        break
      case 30:
        TextPt = 31
        TextTimer = 282
        Fading = true
        break
      case 31:
        global.profile[?'PSGAMES'] ++
        room_goto(rMenu)
        break
      default: TextTimer = 9000
      }
    }
  }
if Fading
  FadingOp+= 0.0018
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if BStart&gt;0
  {
  if BStart.hover &gt; 0
    {
    instance_destroy(BStart,true)
    BStart = -1
    prepared = true
    Cube.Rot = true
    currWord = string_char_at(prevWord,string_length(prevWord))
    TextPt = 1
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Enter simulation</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !prepared
  exit
  
if Cube.Rot
  exit

//check len
if string_length(currWord) &lt; MinLen
  {
  Cube.LengthErr = true
  Timer.Timer-= 11111
  exit
  }
  
//check tabu
for (i=2; i&lt;=string_length(currWord); i++)
  {
  j = ds_list_find_index(l.TabuList, string_char_at(currWord,i))
  if (j != -1) &amp;&amp; (j != TTNum)
    {
    Timer.Timer-= 11111
    Cube.TabuErr = true
    Cube.TabuErrNum = j
    exit
    } 
  }

//check prevword
if wordlistTyped(wl,currWord, true) {
  Timer.Timer-= 11111
  exit
  }                                                      
    
//count fields
var ws = 0;                              //words total
var ls = string_length(currWord);       //letters in current word
var ms = Timer.Timer div 60000;         //minutes on timer
var bs = ds_list_size(l.TabuList);      //banned
var ts = 0;                             //target letters
for (i=0; i&lt; ds_list_size(l.TargetList); i++)       //count ts
  ts+= string_count(l.TargetList[| i],prevWord)
//write word and proceed
wordlistAddWord(wl,currWord)
prevWord = currWord
MinLen = string_length(currWord)
if MinLen &gt; MaxLen                //MaxLength to adjust scale in wlist
  MaxLen = MinLen
if MinLen &gt; 15                    //Const Max Length: 15. todo?
  MinLen = 15
currWord = string_char_at(currWord, string_length(currWord))
//Timer bonus
Timer.Timer+= (ls-1)*5000 - Timer div 60                  //every minute on timer
//shift usage                                            //causes loss f one second
if Shift {
  abilChange(PP, 1, -1)
  Shift = false
  }
//ban usage
if TT {
  TT = false
  TTNum = -1
  abilChange(PP, 2, -1)
  }
//letters refresh
with l {lettersNext()}
//Cube Operations: Rotate &amp; Refresh word 
Cube.Rot = true
Cube.LengthErrTick = 0
Cube.LengthErr = false
Cube.NewLen = MinLen
Cube.TabuErr = false
Cube.TabuErrNum = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Cube.Rot
  exit

var c = string_char_at(TypeStr,TypeChr); 
TypeChr++
if TypeChr &gt; string_length(TypeStr)
  TypeEnable = false
  
if c == 'p'   //pause
  exit  

if c == '#'   //type enter
  {
  event_user(1)
  exit
  }

else if c == 'b'   //backspace
  {    
  if string_length(currWord) &gt; 1     
    currWord = string_copy(currWord,1,string_length(currWord)-1)
  Cube.TabuErr = false
  Cube.TabuErrNum = -1
  }
  
  //switch Unban ability
else if c == 't' &amp;&amp; PP.Value[2] &gt; 0
  {
  if TT
    {
    TTNum++
    if TTNum == ds_list_size(TabuList)
      {
      TTNum = -1
      TT = false
      }
    }
  else
    {
    TT = true
    TTNum = 0
    }
  }
  
//Arrows
else if c == 'u'
  {
  if Shift
    {
    Shift = false
    currWord = string_char_at(prevWord, string_length(prevWord))
    Cube.w1 = currWord
    Cube.NewWord = true
    Cube.Shifted = false
    }
  }
    
else if c == 'd'
  {
  if PP.Value[1] &gt; 0
    {
    if !Shift
      {
      Shift = true
      currWord = string_char_at(prevWord, string_length(prevWord)-1)
      Cube.w1 = currWord
      Cube.NewWord = true
      Cube.Shifted = true
      }
    }
  }
      
//Typing
else
  currWord+= c

Cube.w1 = currWord  
Cube.NewWord = true
  
wordlistSetMask(wl, currWord)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//pre-sets
drawTextPreset(fImpact64, c_white, 1, fa_right, fa_top)
//TabuHilight
if TT
  {
  var xt = Cube.x;
  if Shift xt+= 72
  draw_set_alpha(0.66)
  j = MinLen*32
  draw_rectangle(xt-j+TTNum*72,Cube.y-j-100,xt-j+TTNum*72+66,Cube.y-j-34,false)
  }
  
//Text HowToPlay
draw_set_halign(fa_center)
draw_set_valign(fa_bottom)
draw_set_alpha(1)
draw_text_ext(800,420,TextArr[TextPt],76,1234)

//fading
if Fading
  draw_sprite_ext(sPixel,0,0,0,1600,1200,0,0,FadingOp)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rMenu)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
