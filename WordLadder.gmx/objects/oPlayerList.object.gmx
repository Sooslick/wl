<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Players = 0
PlsArr[0] = -1

MyPos = 0
MyPlr = -1

vert = 575
drawEnable = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//bubblesort
for (var i=Players-1; i&gt;0; i--) {
  var sorted = true;
  for (var j=0; j&lt;i; j++)
    if PlsArr[j].Score &lt; PlsArr[j+1].Score {
      var swap = PlsArr[j];
      PlsArr[j] = PlsArr[j+1]
      PlsArr[j+1] = swap
      sorted = false
      }
  if sorted
    break
  } 
  
//find mypos
for (var i=0; i&lt;Players; i++)
  if PlsArr[i] == MyPlr {
    MyPos = i
    break
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !drawEnable
  exit

var textright1 = global.G_RIGHT - 5
var textright2 = textright1 - 125
var textright3 = textright2 - 415
//todo: optimize calcs
drawTextPreset(fImpact64, c_white, 1, fa_right, fa_top)
//fader      
draw_sprite_ext(sSquareFaded,0,global.G_RIGHT-384,vert+13,1.5,0.28,0,c_white,0.75)
//lines
if Players &gt; 0 {
  var pos = MyPos;
  for (var i=0; i&lt;5; i++) {
    if pos != MyPos
      draw_text(textright3, vert + i*70, PlsArr[pos].Word)          //move from cycle
    draw_text(textright2, vert + i*70, PlsArr[pos].Name)
    draw_text(textright1, vert + i*70, string(PlsArr[pos].Score))
    draw_set_alpha(draw_get_alpha()-0.2)
    pos++
    if pos == Players
      break
    }
  draw_set_alpha(0.8)
  pos = MyPos-1
  if pos &gt;= 0
    for (var i=-1; i&gt;-5; i--) {
      draw_text(textright3, vert + i*70, PlsArr[pos].Word)
      draw_text(textright2, vert + i*70, PlsArr[pos].Name)
      draw_text(textright1, vert + i*70, string(PlsArr[pos].Score))
      draw_set_alpha(draw_get_alpha()-0.2)
      pos--
      if pos &lt;0
        break
      }
  }
  
  //todo draw players count 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
