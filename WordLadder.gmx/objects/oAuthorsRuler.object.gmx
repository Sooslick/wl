<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//tech variables init
scurr = 0               //current word on cube
smax = 38               //todo set value according to lv/xp values
stick = 0               //current anim tick
spos = 1                //current typing position

ccurr = 0               //current cred
cmax = 3                //max creds positions
cdelay = 300            //creds animation delay
coffset = 0             //animation offset

parent = -1
OnclickEvent = 0
//cube object to draw strings
Cube = instance_create(512,512,oAuthorsCube)
Cube.parent = id
Cube.w1 = ' '
//credits variables

//button init
bBack = instance_create(300,800,oButton)
bBack.content = 'BACK'
bBack.parent = id
bBack.useParentSurface = true
bBack.sx = 350
bBack.sy = 980
//surface init
ds = surface_create(1500,900)

//main credits array. TODO: load from file!
cred[0] = 'Alexey Petrov#Project lead, dev'
cred[1] = 'Nadezhda Balobanova#Dev, localization'
cred[2] = 'Arthur Averin#QA, testing'
cred[3] = 'Andrey Volkov#Meme director'

//string array.  //TODO TEXTS, NAMES and commands access
s[0] = ' SPECIAL '
s[1] = ' THANKS: '
s[2] = ' YA SOOS '
s[3] = ' MORODER '
s[4] = ' ARTUR98 '
s[5] = ' STE1NES '
s[6] = ' DESMOND '
s[7] = '         '
s[8] = ' REVERSE '
s[9] = '  STOP   '
s[10] = '  TURN   '
s[11] = ' EASTER  '
s[12] = '  START  '
s[13] = '  QUIT   '
s[14] = ' PREVED  '
s[15] = '  SPIN   '
s[16] = ' SPLASH  '
s[17] = '   GAY   '
s[18] = '  EXIT   '
s[19] = '  BLUR   '
s[20] = '  FLIP   '
s[21] = '   EGG   '
s[22] = ' SHUFFLE '
s[23] = ' RESTART '
s[24] = '  RESET  '
s[25] = '  ALMI   '
s[26] = '  FAST   '
s[27] = ' CANCEL  '
s[28] = ' CALLHIM '
s[29] = '   BUG   '
s[30] = '   FIX   '
s[31] = ' DESIGN  '
s[32] = '  CRASH  '
s[33] = '  DICK   '
s[34] = '  BLACK  '
s[35] = '  WHITE  '
s[36] = '  ACCEL  '
s[37] = '  SLOW   '
s[38] = ' SCREAM  '
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//mem free
instance_destroy(Cube, true)
instance_destroy(bBack, true)
if surface_exists(ds)
  surface_free(ds)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//cube letter type effect. 
stick++
if stick&gt;=5 {
  stick = 0
  spos++          //type letter at specified positin every 5 ticks
  if spos &gt; 10 {
    spos = 2      //??? unreachable code?
    scurr++
    if scurr &gt; smax   //check strings oob
      scurr = 0
    }
  if spos == 10 {
    Cube.Rot = true   //rotate if word is complete
    stick = -42
    }
  else
    Cube.w1+= string_char_at(s[scurr],spos)
  }
  
//creds anim
if cdelay &gt; 0
  cdelay--
else {
  coffset+= 6
  if coffset &gt;= 215 {
    coffset = 0
    cdelay = 300
    ccurr++
    if ccurr &gt; cmax
      ccurr = 0
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>coffset = 0
cdelay = 900
ccurr++
if ccurr &gt; cmax
  ccurr = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>coffset = 0
cdelay = 900
ccurr--
if ccurr &lt; 0
  ccurr = cmax
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clicked "back"</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//parent - oMenuRuler
//parent.bAuthors - target button
with parent.bAuthors {uiOnclick()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//init surfaces
if !surface_exists(ds)
  ds = surface_create(1500,900)
surface_set_target(ds)
draw_clear_alpha(0,0)
///draw creds
drawTextPreset(fImpact64, c_white, 1, fa_left, fa_top)
draw_sprite_ext(sSquareFaded,0,524,435,2,0.68,180,c_white,0.9)  //fader
//todo new credits draw
///////////badcode begin/////////
var aof = coffset/430;
var a;
a[0] = 0.5 - aof;
a[1] = 1 - aof
a[2] = 0.5 + aof
a[3] = aof
var ypos;
ypos[0] = 29-coffset
ypos[1] = 245-coffset
ypos[2] = 461-coffset
ypos[3] = 677-coffset
var ccurr2 = ccurr-1;
if ccurr2 &lt; 0 
  ccurr2 = cmax
for (var i=0; i&lt;4; i++) {
  draw_set_alpha(a[i])
  draw_text_transformed(30,ypos[i],cred[ccurr2],0.84,1,0)
  ccurr2++
  if ccurr2 &gt; cmax
    ccurr2 = 0
  }
  ////////////badcode end////////////
//draw_text(15,400-coffset,cred[ccurr])
//cube fader
draw_sprite_ext(sFadedCircle,0,1068,450,15,15,0,0,1)
//draw cube texture
if surface_exists(Cube.ds)
  draw_surface_ext(Cube.ds,684,66,0.75,0.75,0,c_white,1)
  
surface_reset_target()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
