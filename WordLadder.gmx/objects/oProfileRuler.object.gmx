<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//todo stat reset button!

OnclickEvent = 0
//nickname
PNameForm = instance_create(300,100,oForm)
uiFormSet(PNameForm, global.profile[?'PNAME'])
with PNameForm uiRescale(510)
//lang
PLang = instance_create(300,260,oList)
PLang.fonr = fImpact64
ds_map_add(PLang.arr,0,'English')
ds_map_add(PLang.arr,1,'Russian')
PLang.num = global.profile[?'PLOCALE']
PLang.val = PLang.arr[?global.profile[?'PLOCALE']]
//achievements menu
PAch = instance_create(900,260,oButton)
PAch.content = 'ACHIEVEMENTS'
PAch.font = fImpact64
//stats
PStat = instance_create(900,100,oButton)
PStat.content = 'STATISTICS'
PStat.font = fImpact64
//profile selector
PSelector = instance_create(300,500,oButton)
PSelector.content = 'LOG OUT'                 //todo: login if anonymous
PSelector.font = fImpact64
//back
PBack = instance_create(300,800,oButton)
PBack.content = 'BACK'
//confirm
bConf = -1
bYes = -1
bNo = -1
//clickables
alist = ds_list_create()
ds_list_add(alist, PNameForm,PLang,PAch,PStat,PSelector,PBack)

for (var i=0; i&lt;ds_list_size(alist); i++) {
  alist[|i].parent = id
  alist[|i].useParentSurface = true
  alist[|i].sx = alist[|i].x + 50
  alist[|i].sy = alist[|i].y + 180
  }
//TODO //TEMP SECTION //RM AFTER FEATURE IMPL
var ind = ds_list_find_index(alist, PLang)
ds_list_delete(alist, ind)
PLang.clickable = false  
//surface
ds = surface_create(1500,900)
//connected: db todo1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>funcProfileWrite()
//mem free
instance_destroy(PSelector,true)
instance_destroy(PNameForm,true)
instance_destroy(PLang,true)
instance_destroy(PAch,true)
instance_destroy(PStat,true)
instance_destroy(PBack,true)
ds_list_destroy(alist)
if surface_exists(ds)
  surface_free(ds)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//LOG OUT BUTTON
if PSelector.clicked {
  //create confirmation window
  bConf = instance_create(0,0,oConfirmButton);
  bConf.parent = id
  bConf.content = 'Log out?'
  with bConf event_user(0) //set parent for buttons
  bYes = bConf.bYes
  bNo = bConf.bNo
  uiSetClickable(alist, false)
  }
//NAME FORM CLICKED
else if PNameForm.clicked
  global.profile[?'PNAME'] = PNameForm.contentSaved
//GAME LANGUAGE CHANGED
else if PLang.clicked {
  if PLang.active
    uiSetClickable(alist, false)
  else {
    uiSetClickable(alist, true)
    global.profile[?'PLOCALE'] = PLang.num
    }
  }
//ACHV MENU
else if PAch.clicked {
  with parent {
    Header = 'ACHIEVEMENTS'
    lastClicked.sp = sButton
    lastClicked = -1
    layer.Anim = true               //layer: destroy old
    layer.AnimType = 1
    layer.depth++
    layerObj = instance_create(0,0,oProfileAchvs) //layer: create new
    layer = instance_create(0,0,oMenuLayer)
    layer.bg = bg
    layer.Child = layerObj
    layer.depth = depth
    layerObj.parent = id
    }
  uiSetClickable(alist,false)
  }
//STAT MENU
else if PStat.clicked {
  with parent {
    Header = 'STATISTICS'
    lastClicked.sp = sButton
    lastClicked = -1
    layer.Anim = true               //layer: destroy old
    layer.AnimType = 1
    layer.depth++
    layerObj = instance_create(0,0,oProfileStats) //layer: create new
    layer = instance_create(0,0,oMenuLayer)
    layer.bg = bg
    layer.Child = layerObj
    layer.depth = depth
    layerObj.parent = id
    }
  uiSetClickable(alist,false)
  }
//parent -&gt; oMenuRuler; 
else if PBack.clicked
  with parent.bProfile uiOnclick()
//cnfir
else if bYes != -1 {
  if bYes.clicked {
    //reset userdata 
    funcSendProfile()             //todo: send AFTER saving, not before!
    global.userdata[?'AT'] = ''
    global.userdata[?'PW'] = ''
    global.userdata[?'AUTOLOG'] = 0
    instance_destroy(parent, true)
    room_goto(rFirst)
    }
  else if bNo.clicked {
    //destroy conf window
    instance_destroy(bConf)
    uiSetClickable(alist,true)
    }
  }
  
  
//reset
/*
  {    
    global.profile[?'PSINGAMETIME'] = 0
    global.profile[?'PSPLAYTIME'] = 0
    global.profile[?'PSONLINETIME'] = 0
    global.profile[?'PSGAMES'] = 0
    global.profile[?'PSENDS'] = 0
    global.profile[?'PSSERVERS'] = 0
    global.profile[?'PSRESETS']++
    global.profile[?'GM1'] = 0
    global.profile[?'GM2'] = 0
    global.profile[?'PSLV'] = 0
    global.profile[?'PSXP'] = 0 
    ds_map_destroy(global.profile[?'PSSECTIONS'])
    global.profile[?'PSSECTIONS'] = ds_map_create()
    instance_destroy(bAlert,true)
    bAlert = 0
    bReset.clickable = true
    bBack.clickable = true
    }
    */
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawTextPreset(fCube, c_white, 1, fa_center, fa_top)
surface_set_target(ds)
draw_clear_alpha(0,0)
//profile generai fields
draw_text(800, 350, global.config[?'ProfileFile'])
draw_set_halign(fa_left)
draw_text(650, 420, 'Display name: '+global.profile[?'PNAME'])
draw_text(650, 490, 'Player Net ID: '+string(global.profile[?'PNETID']))
draw_text(650, 560, 'Games played: '+string(global.profile[?'PSGAMES']))
draw_text(650, 630, 'Games ended: '+string(global.profile[?'PSENDS']))
draw_text(650, 700, 'Servers visited: '+string(global.profile[?'PSSERVERS']))
draw_text(650, 780, 'Ingame: '+formatTimeString(global.profile[?'PSINGAMETIME']))
surface_reset_target()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
