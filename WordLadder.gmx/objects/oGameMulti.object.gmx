<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>OnclickEvent = 0
//form obj id
bIP = -1
Anim = false
AnimTick = 0
wrong = false
//UI ELEMENTS: NEW WORDLADDER
bNew = instance_create(300,100,oButton)
bNew.content = 'NEW GAME'
with bNew {uiRescale(505)}
//CONNECT WORDLADDER
bConnect = instance_create(300,260,oButton)
bConnect.content = 'CONNECT'
//CONNECT WORDLADDER BY IP + animations
bDirect = instance_create(300,500,oButton)
bDirect.content = 'CONNECT IP'
bDirect.font = fImpact64
with bDirect {uiRescale(500)}
//back button
bBack = instance_create(300,800,oButton)
bBack.content = 'BACK'
//clickables
alist = ds_list_create()
ds_list_add(alist, bNew,bConnect,bDirect,bBack)
for (var i=0; i&lt;ds_list_size(alist); i++) {
  alist[|i].parent = id
  alist[|i].useParentSurface = true
  alist[|i].sx = alist[|i].x + 50
  alist[|i].sy = alist[|i].y + 180
  }
//sf
ds = surface_create(1500,900)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(bConnect,true)
instance_destroy(bDirect,true)
instance_destroy(bNew,true)
instance_destroy(bBack,true)
if bIP != -1
  instance_destroy(bIP, true)
ds_list_destroy(alist)
if surface_exists(ds)
  surface_free(ds)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Anim {
  AnimTick++
  if AnimTick &gt; 10 {
    Anim = false
    bDirect.clickable = true
    }
  else {
    bDirect.x =  funcTickOffset(AnimTick, 300, 840, true)
    bDirect.sx = bDirect.x + 50
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bBack.clicked {
  with parent.bNewGame {uiOnclick()}
  uiSetClickable(alist,false)
  }
else if bConnect.clicked {
  with parent {
    Header = "FIND GAMES"
    layer.Anim = true               //layer: destroy old
    layer.AnimType = 1
    layer.depth++
    layerObj = instance_create(0,0,oMultiFind) //layer: create new
    layer = instance_create(0,0,oMenuLayer)
    layer.bg = bg
    layer.Child = layerObj
    layer.depth = depth
    layerObj.parent = id
    }
  uiSetClickable(alist,false)
  }
else if bDirect.clicked
  {
  if (bIP != -1) {
    if (string_length(bIP.contentSaved)&gt;6) {
      global.GameType = 0
      global.IP = bIP.contentSaved
      instance_destroy(parent, true)
      room_goto(rGame)
      }
    else wrong = true
    }
  else  {
    //animation
    Anim = true
    bDirect.clickable = false
    //create form: ip adress
    bIP = instance_create(300,500,oForm)
    uiFormSet(bIP, global.config[?'SavedIP'])
    bIP.allowClipboard = true
    bIP.parent = id
    bIP.useParentSurface = true
    bIP.sx = bIP.x + 50
    bIP.sy = bIP.y + 180
    bIP.StartDepth++
    bIP.depth++
    with bIP {uiRescale(500)}
    ds_list_add(alist, bIP)
    }
  }
else if bNew.clicked {
  with parent {
    Header = "GAME SETTINGS"
    layer.Anim = true               //layer: destroy old
    layer.AnimType = 1
    layer.depth++
    layerObj = instance_create(0,0,oMultiRuler) //layer: create new
    layer = instance_create(0,0,oMenuLayer)
    layer.bg = bg
    layer.Child = layerObj
    layer.depth = depth
    layerObj.parent = id
    }
  uiSetClickable(alist,false)
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//init surfaces
if !surface_exists(ds)
  ds = surface_create(1500,900)
surface_set_target(ds)
draw_clear_alpha(0,0)
//hints
drawTextPreset(fImpact64, c_white, 1, fa_left, fa_top)
if bNew.hover
  draw_text_ext(600,30,'Create new Word Ladder game room with your custom settings.',80,800)
else if bConnect.hover
  draw_text_ext(600,30,'Find available Word Ladder game rooms and join them.',80,800)
else if bDirect.hover
  draw_text_ext(600,30,"Connect to Word Ladder game room by host's IP adress.",80,800)
//wrong IP hint
if wrong {
  draw_set_font(fHint)
  draw_text(60,572,'Incorrect format')
  }
surface_reset_target()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wrong = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
