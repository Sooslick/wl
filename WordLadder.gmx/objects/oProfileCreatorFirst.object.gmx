<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>logdata = ds_map_create();
caption = 'AUTH'

//if !first launch read last login file
if !global.config[?'FirstLaunch']
  if file_exists('profiles/lastlogin.dat')
    funcLastloginRead(logdata)

if !is_undefined(logdata[?'PNETID'])
  pnetid = logdata[?'PNETID']
else
  pnetid = -1
  
if !is_undefined(logdata[?'LOGIN'])
  name = logdata[?'LOGIN']
else
  name = ''
  
if !is_undefined(logdata[?'PW']) {
  pw = logdata[?'PW']
  enc = true;
  }
else {
  pw = ''
  enc = false;
  }
  
if !is_undefined(logdata[?'AT'])
  global.at = logdata[?'AT']
else
  global.at = ''
  
nameForm = instance_create(800,300,oForm)
nameForm.content = name
nameForm.contentSaved = name

pwForm = instance_create(800,440,oForm)
pwForm.content = pw
pwForm.contentSaved = pw
pwForm.hidden = true

spCb = instance_create(800,580,oCheckBox)
if logdata[?'SAVEPW'] &gt; 0
  spCb.checked = true
spCb.content = 'Save Password'
spCb.hint = 'Allow to game save your password to next launch'

alCb = instance_create(800,720,oCheckBox)
if logdata[?'AUTOLOG'] &gt; 0
  alCb.checked = true
alCb.content = 'Auto Log in'
alCb.hint = 'Allow to game load your profile automatically'

bLog = instance_create(800,860,oButton)
bLog.content = 'LOGIN'

bNoLog = instance_create(1100,1000,oButton)
bNoLog.content = 'SKIP'

bReg = instance_create(500,1000,oButton)
bReg.content = 'REGISTER'

raskladka_ok = true
HeldBackspaceTick = 0
loadrot = 0
load = false

if logdata[?'AUTOLOG'] &gt; 0
  {
  http_get('http://sooslick.flaminggaming.ru/wl/getSave.php?at=' + global.at)
  nameForm.clickable = false
  pwForm.clickable = false
  spCb.clickable = false
  alCb.clickable = false
  bLog.clickable = false
  bNoLog.clickable = false
  bReg.clickable = false
  load = true
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>funcLastloginWrite(logdata);
ds_map_destroy(logdata);
global.config[?'FirstLaunch'] = false

//on enter click change globals 
global.config[?'ProfileFile'] = name
global.profile[?'PNAME'] = name
global.profile[?'PLOCALE'] = 0
global.profile[?'PNETID'] = -1
global.profile[?'PSINGAMETIME'] = 0
global.profile[?'PSPLAYTIME'] = 0
global.profile[?'PSONLINETIME'] = 0
global.profile[?'PSGAMES'] = 0
global.profile[?'PSENDS'] = 0
global.profile[?'PSSERVERS'] = 0
global.profile[?'PSRESETS']++
ds_map_destroy(global.profile[?'PSSECTIONS'])
global.profile[?'PSSECTIONS'] = ds_map_create()

action_another_room(rMenu)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>loadrot+= 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bLog.clicked
  {
  bLog.clicked = false
  enc = true
  pwForm.contentSaved = sha1_string_utf8(pwForm.contentSaved)
  http_get('http://sooslick.flaminggaming.ru/wl/authUser.php?login=' + nameForm.contentSaved + '&amp;passw=' + pwForm.contentSaved)
  nameForm.clickable = false
  pwForm.clickable = false
  spCb.clickable = false
  alCb.clickable = false
  bLog.clickable = false
  bNoLog.clickable = false
  bReg.clickable = false
  load = true
  }  
else if bNoLog.clicked
  instance_destroy(self,true)
else if bReg.clicked
  {
  bReg.clicked = false
  url_open('http://sooslick.flaminggaming.ru/reg.php')
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if async_load[? "status"] != 0
  exit

var html = json_decode(async_load[? "result"])
if html != -1
  {
  //check pnetid
  if !is_undefined(html[?'PNETID'])
    {
    //todoGET SAVEFILE
    global.config[?'ProfileFile'] = name
    funcProfileRead()
    global.profile[?'PNETID'] = html[?'PNETID']
    if global.at = ''
      global.at = html[?'ACCESS_TOKEN']
      
    // write login
    logdata[?'PNETID'] = global.profile[?'PNETID']
    logdata[?'LOGIN'] = nameForm.contentSaved
    logdata[?'PW'] = pwForm.contentSaved
    if spCb.checked
      logdata[?'SAVEPW'] = 1
    else
      logdata[?'SAVEPW'] = 0
    if alCb.checked
      logdata[?'AUTOLOG'] = 1
    else
      logdata[?'AUTOLOG'] = 0    
    instance_destroy(self,true)
    }
  else
    {
    nameForm.clickable = true
    pwForm.clickable = true
    pwForm.content = ''
    pwForm.contentSaved = ''
    enc = false
    spCb.clickable = true
    alCb.clickable = true
    bLog.clickable = true
    bNoLog.clickable = true
    bReg.clickable = true
    caption = 'AUTH ERROR'
    load = false
    }
  }
else
  {
  nameForm.clickable = true
  pwForm.clickable = true
  pwForm.content = ''
  pwForm.contentSaved = ''
  enc = false
  spCb.clickable = true
  alCb.clickable = true
  bLog.clickable = true
  bNoLog.clickable = true
  bReg.clickable = true
  caption = 'CONNECTION ERROR'
  load = false
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white)
draw_set_alpha(1)
draw_set_halign(fa_center)
draw_set_valign(fa_center)
draw_set_font(fImpact96)
draw_text(800,100,caption)

if load
  {
  draw_sprite_ext(sLoading,0,1500,80,2,2,loadrot,c_white,1)
  draw_sprite_ext(sLoading,0,1500,80,1,1,-loadrot*2,c_white,1)
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
