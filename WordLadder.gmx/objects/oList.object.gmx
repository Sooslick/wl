<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//pre inits
font = fImpact64
hover = false
hoverElement = -1   //-1: main, 0..N: elements
active = false      //if true = opened
clicked = false     //element clicked
clickable = true
hint = false
hintTick = 0
hintMsg = ''
StartDepth = 0

dsc = 1                     //draw scale

arr = ds_map_create()
val = ''
num = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !active
  {
  if funcCheckGuiHover((x-256*dsc), (y-64*dsc), (x+256*dsc), (y+64*dsc))       
          {
          hover = 1            //check cursor pos     //not by mouse enter/leave event
          hoverElement = -1
          if clickable
            hintTick++
          if hintTick &gt; 42
            {
            hint = true   
            depth = StartDepth - 2
            } 
          }
  else
          {
          hover = 0
          hint = false
          hintTick = 0
          depth = StartDepth
          }
  }      
else
  {
  hover = 0
  hoverElement = -1
  for (i=0; i&lt;=ds_map_size(arr); i++)
    if funcCheckGuiHover((x-256*dsc), (y+i*128*dsc-64*dsc), (x+256*dsc), (y+i*128*dsc+64*dsc))   //checking vpos 4 every line
      {
      hover = 1       
      hoverElement = i-1
      break
      }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if clickable
  {
  if active             //if opened
    {
    if hover
      {
      active = false
      clicked = true
      if hoverElement&gt;=0
        {
        num = hoverElement
        val = arr[?num]
        }
      }
    else
      {
      active = false
      clicked = true
      }
    }
  else
    {
    if hover
      {
      active = true
      clicked = true
      }
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//DRAW PRE-SETS
draw_set_font(font)
draw_set_color(c_white)
draw_set_halign(fa_left)
draw_set_valign(fa_center)
draw_set_alpha(1)

var tsc;

//MAIN DRAW BUTTON  
if !active
  {
  tsc = (366 / string_width(val))
  if tsc &gt; 1 tsc = 1
  tsc*= dsc
  draw_sprite_ext(sList,hover,x,y,dsc,dsc,0,c_white,1)      //if list closed
  if clickable
    draw_set_alpha(hover+0.66)
  else
    draw_set_alpha((hover+0.5)/2)
  draw_text_transformed((x-240*dsc),y,val,tsc,dsc,0)
  }
else
  {
  tsc = 366 / string_width(val)
  if tsc &gt; 1 tsc = 1
  tsc*= dsc
  draw_sprite_ext(sList,2,x,y,dsc,dsc,0,c_white,1)      //if list opened
  draw_text_transformed((x-240*dsc),y,val,tsc,dsc,0)
  for (i=0; i&lt;ds_map_size(arr); i++)
    {
    if hoverElement==i    
       {
       draw_set_alpha(1)                                          //list positions
       draw_sprite_ext(sList,4,x,(y+128*dsc+i*128*dsc),dsc,dsc,0,c_white,1)
       }
    else
       {
       draw_set_alpha(0.66)
       draw_sprite_ext(sList,3,x,(y+128*dsc+i*128*dsc),dsc,dsc,0,c_white,1)
       }
    tsc = 490 / string_width(arr[?i])
    if tsc &gt; 1 tsc = 1
    tsc*= dsc
    draw_text_transformed((x-240*dsc),(y+128*dsc+i*128*dsc),arr[?i],tsc,dsc,0)
    }
  }
  
//hint drawing
if hint &amp;&amp; (hintMsg!='') &amp;&amp; clickable &amp;&amp; !active
  {
  var my;
  if window_get_fullscreen()
    my = (display_mouse_get_y()-global.DRAW_VOFF) / global.DRAW_SCALE
  else
    my = (window_mouse_get_y()-global.DRAW_VOFF) / global.DRAW_SCALE
  draw_set_font(fHint)
  draw_set_halign(fa_left)
  draw_set_valign(fa_top)
  var h = string_height_ext(hintMsg, 50, 500) + 12;
  draw_set_alpha(0.75)
  draw_set_color(0)
  draw_rectangle(x - 256*dsc, my - h*dsc, x + 256*dsc, my, false)
  draw_set_alpha(1)
  draw_set_color(c_white)
  h-= 6
  draw_text_ext_transformed(x - 250*dsc, my - h*dsc, hintMsg, 50,500, dsc, dsc, 0)
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// empty line for disable self-drawing
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
