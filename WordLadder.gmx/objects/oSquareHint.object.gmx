<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>SQUARES = 42
HINT_WORD = ''
Tick = 0
CurrSq = 0
LifeTime = 180
HalfTime = 120
for (i=0; i&lt;SQUARES; i++) {
  sqArr[i] = instance_create(i*64 + global.G_LEFT, 100 + global.G_UP, oSquare)
  sqArr[i].content = chr(irandom_range(65,90))
  sqArr[i].opSq = 0
  sqArr[i].opCon = 0
  sqArr[i].revState = 0
  sqArr[i].parent = id
  sqArr[i].image_xscale = 2
  sqArr[i].image_yscale = 2
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i=0; i&lt;SQUARES; i++)
  instance_destroy(sqArr[i],true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Tick++
if Tick == HalfTime
  CurrSq = 0
else if Tick == LifeTime {
  instance_destroy(self, true)
  exit
  }
//appear / disappear
if CurrSq &lt; SQUARES
  if Tick &lt; HalfTime {
    sqArr[CurrSq].revState = 3
    CurrSq++
    }
  else {
    sqArr[CurrSq].revState = 8
    CurrSq++
    }
//shift
for (var i=0; i&lt;SQUARES; i++)
  sqArr[i].x--
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//hint word param passed
if HINT_WORD == ''
  exit
  
var Pos = irandom_range(3,23)
for (var i=1; i&lt;string_length(HINT_WORD); i++) {
  sqArr[Pos].content = string_char_at(HINT_WORD,i)
  Pos++
  if Pos &gt;= SQUARES
    break
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i=0; i&lt;SQUARES; i++) {
  draw_sprite_ext(sSquare,0,sqArr[i].x,sqArr[i].y,2,2,0,c_white,sqArr[i].opSq)
  if sqArr[i].content != -1 {
    drawTextPreset(fCube,sqArr[i].clr,sqArr[i].opCon,fa_center,fa_center)
    draw_text(sqArr[i].x+32,sqArr[i].y+32,sqArr[i].content)
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
