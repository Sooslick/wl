<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//init vars
Child = -1
bg = -1         //bg obj: stole surface to draw blur fx
Anim = true
AnimTick = 0
AnimType = 0    //0: in, 1: out, 2: hor in, 3: hor out
//anim params (consts?)
cx = global.G_RIGHT + 50
cy = 180
cR = global.G_RIGHT
w = 1500
h = 900
//draw surface id + params
sf = surface_create(1500,900)
sfx = global.G_RIGHT + 1000
sfy = -global.G_RIGHT
sfr = -90
sfa = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//mem free
if surface_exists(sf)
  surface_free(sf)
if Child != -1
  instance_destroy(Child, true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Anim
  {
  //animation tick
  AnimTick+= 1
  var p = funcTickPercent(AnimTick);
  if AnimTick &gt;= 10 {
    AnimTick = 0
    Anim = false
    }
  switch AnimType {
    case 0:                 //anim rot in
      var ag = 90*p + 90;
      sfx = cR*dcos(ag) + cx
      sfy = -cR*dsin(ag) + cy
      sfr = 90*p - 90
      sfa = p
      break;
    case 1:               //anim rot out
      var ag = 90*p+180;
      sfx = cR*dcos(ag) + cx
      sfy = -cR*dsin(ag) + cy
      sfr = 90*p
      sfa = 1-p
      if AnimTick == 0
        instance_destroy(self, true)
      break;
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//check and clear main surface
if !surface_exists(sf)
  sf = surface_create(1500,900)  //2048, 1024
surface_set_target(sf)
draw_clear_alpha(0,1)

//blur fx
if bg != -1
  if surface_exists(bg.ds)
    {
    //apply blur to texture from background, calc offsets and rotation
    var xoff = sfx - bg.dsx - view_xview[0];
    var yoff = sfy - bg.dsy - view_yview[0];
    var rR   = sfr - bg.rot;
    var Sc   = 1200 / global.DPORTH
    //drawing
    shader_set(shGauss)
    var shader_params = shader_get_uniform(shGauss, "tense");
    shader_set_uniform_f(shader_params, 0.75);
    draw_surface_ext(bg.ds, -xoff, -yoff, Sc,Sc, -rR, c_white, 1)
    shader_reset()
    }
//child surface draw
if Child != -1
  if surface_exists(Child.ds)
    draw_surface(Child.ds,0,0)  
//border draw
draw_set_color(c_red)
draw_set_alpha(1)
for (var i=0; i&lt;12; i++)
  draw_rectangle(0+i,0+i,1499-i,899-i,true)
draw_set_color(c_maroon)
for (var i=12; i&lt;18; i++)
  draw_rectangle(0+i,0+i,1499-i,899-i,true)
//post-operations    
surface_reset_target()
draw_surface_ext(sf,sfx,sfy,1,1,sfr,c_white,sfa)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
