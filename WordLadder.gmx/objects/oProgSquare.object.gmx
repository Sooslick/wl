<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>8</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Req = 1
Prog = 0

colorInner = 128
colorOuter = 64
colorBorder = 200
size = 128

tfont = fCube
tsc = 0.5
content = ''

visible = false

ds = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !surface_exists(ds)
  ds = surface_create(128,128)
surface_set_target(ds)
draw_clear(colorOuter)
drawTextPreset(tfont,colorInner,1,fa_center,fa_bottom)

//progress
if Prog &lt; Req {
  var quad = Req * 0.25;
  var curr_quad = Prog
  draw_primitive_begin(pr_trianglefan)
  draw_vertex(64,64)
  draw_vertex(0,0)
  //first
  if curr_quad &lt;= quad
    draw_vertex(curr_quad / quad * 128, 0)
  else {
    draw_vertex(128,0)
    curr_quad-= quad
    //second
    if curr_quad &lt;= quad
      draw_vertex(128, curr_quad / quad * 128)
    else {
      draw_vertex(128,128)
      curr_quad-= quad
      //third
      if curr_quad &lt;= quad
        draw_vertex(128-(curr_quad / quad * 128), 128)
      else {
        draw_vertex(0,128)
        curr_quad-= quad
        draw_vertex(0, 128-(curr_quad / quad * 128))
        }
      }
    }
  draw_primitive_end()
  }
else
  draw_rectangle(0,0,128,128,false)
  
//border
draw_set_color(colorBorder)
draw_rectangle(0,0,127,127,true)
draw_rectangle(1,1,126,126,true)

surface_reset_target()
draw_surface_ext(ds,x,y,1,1,-45,c_white,1)
draw_text_transformed(x,y-5,content,tsc,tsc,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
