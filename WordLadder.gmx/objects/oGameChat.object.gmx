<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPixel2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i=0; i&lt;256; i++)   //message history
  Arr[i] = ''
for (i=0; i&lt;5; i++)     //messages on display
  cdArr[i] = 0
CurrPos = 0
PendingStr = ''
GotStr = ''
image_xscale = global.UPORTW / 2.02          //chatBox size
image_yscale = 35
image_alpha = 0.05
Hover = false
Active = false
CursorTick = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>CursorTick++
if CursorTick &gt; 20
  CursorTick = 0

for (i=0; i&lt;5; i++)
  if cdArr[i] &gt; 0
    cdArr[i]--

Hover = funcCheckGuiHover(0,0,1600,50)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Active = Hover
if Active {
  image_blend = 0
  image_alpha = 0.5
  }
else {
  image_blend = c_white
  image_alpha = 0.05
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Got Str</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//prepare miltiline array
var lines;
var l = 0;
//todo: rm legacy. Now chat in full-line. Try to implement unlimited msg length
var sym = 155;                         //15 is min num of symbols can be placed on single line
draw_set_font(fChat)
while sym &lt; string_length(GotStr)     //cycle for cut one string to multi substrs
  {                                   //sym will be incr while substr width &lt; chat window width
  if string_width(string_copy(GotStr,1,sym)) &gt; image_xscale*1.92
    {
    var spacePos = 0;
    for (var i=1; i&lt;=sym; i++)
      if string_char_at(GotStr,i) == ' '
        spacePos = i
    if spacePos &gt; 0
      sym = spacePos+1
    lines[l] = string_copy(GotStr,1,sym-1)
    l++
    GotStr = string_copy(GotStr,sym,string_length(GotStr)-sym+1)
    sym = 15;
    }
  sym++
  }
if string_length(GotStr) == 0
  l--
else
  {
  lines[l] = GotStr
  l++
  }

var k = l-1
while k &gt;= 0
  {
  CurrPos++
  if CurrPos &gt; 255
    CurrPos = 0
  Arr[CurrPos] = lines[k]
  k--
  }

for (i=5-l; i&gt;=0; i--)
  cdArr[i+l] = cdArr[i]
for (i=0; i &lt; l; i++)
  cdArr[i] = 300
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawTextPreset(fChat, c_white, 1, fa_left, fa_top)
//chatbox
draw_self()
//chatbox outline
if Active {
  draw_self()
  draw_rectangle(x-image_xscale, y-34,x+image_xscale, y+34, true)
  }
//chatline message
if Active {
  if (CursorTick &gt; 10)
    draw_text(0, 3, '&gt;' + PendingStr + '|')
  else
    draw_text(0, 3, '&gt;' + PendingStr)
  }
else {
  draw_set_alpha(0.5)
  draw_text(0,0, 'Click here to chat')
  }
  
//chat messages
var cp = CurrPos;
for (var i=0; i&lt;5; i++) {
  draw_set_alpha(clamp(cdArr[i] / 100, 0, 1))
  if draw_get_alpha() &gt; 0 {
    //shader_set(shInverse)    //doesn't work. todo debug required
    //var sample = shader_get_sampler_index(shInverse, 'destination')   //plz, not every tick
    //texture_set_stage(sample, application_surface)
    draw_text(0,75+i*50,Arr[cp])
    //shader_reset()
    }
  cp--;
  if cp &lt; 0
    cp = 255
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !Active
  exit
  
if keyboard_check(vk_enter){
  if string_length(PendingStr) &gt; 0 {
    with parent {event_user(5)}         //execute sendmsg event on server / client
    PendingStr = ''                       //todo: refactor method
    DrawFrom = 0
    }
  exit     
  }

if keyboard_check(vk_backspace) {   
  if string_length(PendingStr) &gt; 0 {
    if string_copy(PendingStr, string_length(PendingStr), 1) == '#'
      PendingStr = string_copy(PendingStr,1,string_length(PendingStr)-2)
    else
      PendingStr = string_copy(PendingStr,1,string_length(PendingStr)-1)
    }
  exit
  }

if (ord(keyboard_lastchar)&gt;=32) &amp;&amp; (string_length(PendingStr)&lt;54) {
  if keyboard_lastchar == '#'
    PendingStr+= '\#'
  else
    PendingStr+= keyboard_lastchar
  }
  
keyboard_lastchar = ''
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
