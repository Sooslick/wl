<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//start word length
bStartLen = instance_create(300,400,oList)
ds_map_add(bStartLen.arr,0,'Start w/ 4')
ds_map_add(bStartLen.arr,1,'Start w/ 5')
ds_map_add(bStartLen.arr,2,'Start w/ 6')
bStartLen.val = 'Start w/ 4'
bStartLen.num = 0
bStartLen.dsc = 0.84
bStartLen.hintMsg = 'Word length at the game start'
bStartLen.StartDepth = -2

//start timer
bStartTimer = instance_create(300,520,oList)
ds_map_add(bStartTimer.arr,0,'Timer: 30s')
ds_map_add(bStartTimer.arr,1,'Timer: 40s')
ds_map_add(bStartTimer.arr,2,'Timer: 50s')
ds_map_add(bStartTimer.arr,3,'Timer: 60s')
bStartTimer.val = 'Timer: auto'
bStartTimer.num = -1
bStartTimer.dsc = 0.84
bStartTimer.hintMsg = 'The time you have from the start'
bStartTimer.StartDepth = -1 

bSec = instance_create(300,640,oList)
ds_map_add(bSec.arr,0,'Inc.: 3s')
ds_map_add(bSec.arr,1,'Inc.: 4s')
ds_map_add(bSec.arr,2,'Inc.: 5s')
bSec.val = 'Inc.: 5s'
bSec.num = 2
bSec.dsc = 0.84
bSec.hintMsg = 'Time bonus for every letter in the word'

//banned
bBan = instance_create(1200,400,oList)
ds_map_add(bBan.arr,0,'Bans: simple')
ds_map_add(bBan.arr,1,'Bans: advanced')
ds_map_add(bBan.arr,2,'Bans: fastest')
bBan.val = 'Bans: simple'
bBan.num = 0
bBan.dsc = 0.84
bBan.hintMsg = 'The speed of banned letters amount increasing'
bBan.StartDepth = -1

bVowel = instance_create(1200,520,oSlider)
bVowel.content = 'Vowels ban %'
bVowel.font = fImpact64
bVowel.currval = 0
bVowel.dsc = 0.84
with bVowel {event_user(0)}

bGreen = instance_create(1200,640,oList)
ds_map_add(bGreen.arr,0,'Greens: often')
ds_map_add(bGreen.arr,1,'Greens: rare')
ds_map_add(bGreen.arr,2,'Greens: never')
bGreen.val = 'Greens: often'
bGreen.num = 0
bGreen.dsc = 0.84
bGreen.hintMsg = 'Frequency of green letters appearing'

//length dec
bDec = instance_create(750,400,oList)
ds_map_add(bDec.arr,0,'Dec.: often')
ds_map_add(bDec.arr,1,'Dec.: rare')
ds_map_add(bDec.arr,2,'Dec.: never')
bDec.val = 'Dec.: often'
bDec.num = 0
bDec.dsc = 0.84
bDec.hintMsg = 'Frequency of word length decrease'

//abilities
bUnban = instance_create(750,520,oCheckBox)
bUnban.content = 'Unbans'
bUnban.checked = true
bUnban.dsc = 0.84
with bUnban {event_user(0)}

bShift = instance_create(750,640,oCheckBox)
bShift.content = 'Shifts'
bShift.checked = true
bShift.dsc = 0.84
with bShift {event_user(0)}

bHints = instance_create(750,760,oCheckBox)
bHints.content = 'Hints'
bHints.checked = true
bHints.dsc = 0.84
with bHints {event_user(0)}

//bBack
bBack = instance_create(300,1000,oButton)
bBack.content = 'BACK'

bGo = instance_create(1200,1000,oButton)
bGo.content = 'START'
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(bStartLen,true)
instance_destroy(bBan,true)
instance_destroy(bVowel,true)
instance_destroy(bDec,true)
instance_destroy(bUnban,true)
instance_destroy(bShift,true)
instance_destroy(bHints,true)
instance_destroy(bStartTimer,true)
instance_destroy(bSec,true)
instance_destroy(bGreen,true)
instance_destroy(bBack,true)
instance_destroy(bGo,true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bStartLen.clicked
  {
  if !bStartLen.active
    {
    bStartLen.clicked = false
    bBan.clickable = true
    bVowel.clickable = true
    bDec.clickable = true
    bUnban.clickable = true
    bShift.clickable = true
    bHints.clickable = true
    bStartTimer.clickable = true
    bSec.clickable = true
    bGreen.clickable = true
    bBack.clickable = true
    bGo.clickable = true
    }
  else
    {
    bStartLen.clicked = false
    bBan.clickable = false
    bVowel.clickable = false
    bDec.clickable = false
    bUnban.clickable = false
    bShift.clickable = false
    bHints.clickable = false
    bStartTimer.clickable = false
    bSec.clickable = false
    bGreen.clickable = false
    bBack.clickable = false
    bGo.clickable = false
    }
  }
  
else if bBan.clicked
  {
  if !bBan.active
    {
    bBan.clicked = false
    bStartLen.clickable = true
    bVowel.clickable = true
    bDec.clickable = true
    bUnban.clickable = true
    bShift.clickable = true
    bHints.clickable = true
    bStartTimer.clickable = true
    bSec.clickable = true
    bGreen.clickable = true
    bBack.clickable = true
    bGo.clickable = true
    }
  else
    {
    bBan.clicked = false
    bStartLen.clickable = false
    bVowel.clickable = false
    bDec.clickable = false
    bUnban.clickable = false
    bShift.clickable = false
    bHints.clickable = false
    bStartTimer.clickable = false
    bSec.clickable = false
    bGreen.clickable = false
    bBack.clickable = false
    bGo.clickable = false
    }
  }
  
else if bDec.clicked
  {
  if !bDec.active
    {
    bDec.clicked = false
    bStartLen.clickable = true
    bBan.clickable = true
    bVowel.clickable = true
    bUnban.clickable = true
    bShift.clickable = true
    bHints.clickable = true
    bStartTimer.clickable = true
    bSec.clickable = true
    bGreen.clickable = true
    bBack.clickable = true
    bGo.clickable = true
    }
  else
    {
    bDec.clicked = false
    bStartLen.clickable = false
    bBan.clickable = false
    bVowel.clickable = false
    bUnban.clickable = false
    bShift.clickable = false
    bHints.clickable = false
    bStartTimer.clickable = false
    bSec.clickable = false
    bGreen.clickable = false
    bBack.clickable = false
    bGo.clickable = false
    }
  }
  
else if bStartTimer.clicked
  {
  if !bStartTimer.active
    {
    bStartTimer.clicked = false
    bStartLen.clickable = true
    bBan.clickable = true
    bVowel.clickable = true
    bDec.clickable = true
    bUnban.clickable = true
    bShift.clickable = true
    bHints.clickable = true
    bSec.clickable = true
    bGreen.clickable = true
    bBack.clickable = true
    bGo.clickable = true
    }
  else
    {
    bStartTimer.clicked = false
    bStartLen.clickable = false
    bBan.clickable = false
    bVowel.clickable = false
    bDec.clickable = false
    bUnban.clickable = false
    bShift.clickable = false
    bHints.clickable = false
    bSec.clickable = false
    bGreen.clickable = false
    bBack.clickable = false
    bGo.clickable = false
    }
  }
  
else if bSec.clicked
  {
  if !bSec.active
    {
    bSec.clicked = false
    bStartLen.clickable = true
    bBan.clickable = true
    bVowel.clickable = true
    bDec.clickable = true
    bUnban.clickable = true
    bShift.clickable = true
    bHints.clickable = true
    bStartTimer.clickable = true
    bGreen.clickable = true
    bBack.clickable = true
    bGo.clickable = true
    }
  else
    {
    bSec.clicked = false
    bStartLen.clickable = false
    bBan.clickable = false
    bVowel.clickable = false
    bDec.clickable = false
    bUnban.clickable = false
    bShift.clickable = false
    bHints.clickable = false
    bStartTimer.clickable = false
    bGreen.clickable = false
    bBack.clickable = false
    bGo.clickable = false
    }
  }
  
else if bGreen.clicked
  {
  if !bGreen.active
    {
    bGreen.clicked = false
    bStartLen.clickable = true
    bBan.clickable = true
    bVowel.clickable = true
    bDec.clickable = true
    bUnban.clickable = true
    bShift.clickable = true
    bHints.clickable = true
    bStartTimer.clickable = true
    bSec.clickable = true
    bBack.clickable = true
    bGo.clickable = true
    }
  else
    {
    bGreen.clicked = false
    bStartLen.clickable = false
    bBan.clickable = false
    bVowel.clickable = false
    bDec.clickable = false
    bUnban.clickable = false
    bShift.clickable = false
    bHints.clickable = false
    bStartTimer.clickable = false
    bSec.clickable = false
    bBack.clickable = false
    bGo.clickable = false
    }
  }
  
else if bVowel.clicked
  bVowel.clicked = false
  
else if bBack.clicked
  {
  p = instance_create(0,0,oGameSolo)
  p.parent = parent
  parent.ActiveMenuPtr = p
  parent.Header = 'SINGLEPLAYER'
  instance_destroy(self,true)
  }
  
else if bGo.clicked
  {
  global.custom = ds_map_create()
  global.custom[?'StartLen'] = bStartLen.num + 4
  global.custom[?'Banned'] = bBan.num
  global.custom[?'Vowels'] = bVowel.currval / 10
  global.custom[?'Dec'] = bDec.num
  global.custom[?'Unban'] = bUnban.checked
  global.custom[?'Shift'] = bShift.checked
  global.custom[?'Hints'] = bHints.checked
  global.custom[?'StartTimer'] = bStartTimer.num
  global.custom[?'Sec'] = bSec.num + 3
  global.custom[?'Green'] = bGreen.num
  global.GameType = 4
  action_another_room(rGame)
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)
draw_set_font(fImpact64)
draw_set_halign(fa_center)
draw_set_valign(fa_center)
draw_set_color(c_white)

draw_text(300,280,'GAME START')
draw_text(750,280,'ABILITIES')
draw_text(1200,280,'FEATURING')
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
