<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>OnclickEvent = 0
//solo
PSolo = instance_create(300,100,oButton)
PSolo.content = 'SINGLEPLAYER'
//multi
PClient = instance_create(300,260,oButton)
PClient.content = 'MULTIPLAYER'
PClient.clickable = false
//how to play button
PHtp = instance_create(300,500,oButton)
PHtp.content = 'HOW TO PLAY'
//back baton
PBack = instance_create(300, 800, oButton)
PBack.content = 'BACK'
//clickables
alist = ds_list_create()
ds_list_add(alist, PSolo, PClient, PHtp, PBack)
//button's fileds
for (var i=0; i&lt;ds_list_size(alist); i++) {
  alist[|i].parent = id
  alist[|i].useParentSurface = true
  alist[|i].sx = alist[|i].x + 50
  alist[|i].sy = alist[|i].y + 180
  with alist[|i] {uiRescale(505)}
  }
//surface
ds = surface_create(1500,900)

//htp hint
//if global.profile[?'PSGAMES'] == 0
//  {
//  HintArr = instance_create(0,0,oFirstLaunchArrow)
//  HintArr.pointer = PHtp
//  with HintArr
//    {
//    xOff = 420
//    Rot = 180
//    event_user(0)
//    }
//  }
//else
//  HintArr = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//mem free
instance_destroy(PSolo,true)
instance_destroy(PClient,true)
instance_destroy(PHtp,true)
instance_destroy(PBack,true)
ds_list_destroy(alist)
if surface_exists(ds)
  surface_free(ds)
//if HintArr != -1
//  instance_destroy(HintArr,true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if PSolo.clicked {
  with parent {
    Header = 'SINGLEPLAYER'
    lastClicked.sp = sButton
    lastClicked = -1
    layer.Anim = true               //layer: destroy old
    layer.AnimType = 1
    layer.depth++
    layerObj = instance_create(0,0,oGameSolo) //layer: create new
    layer = instance_create(0,0,oMenuLayer)
    layer.bg = bg
    layer.Child = layerObj
    layer.depth = depth
    layerObj.parent = id
    }
  uiSetClickable(alist,false)
  }
else if PClient.clicked {
  with parent {
    Header = 'MULTIPLAYER'
    lastClicked.sp = sButton
    lastClicked = -1
    layer.Anim = true               //layer: destroy old
    layer.AnimType = 1
    layer.depth++
    layerObj = instance_create(0,0,oGameMulti) //layer: create new
    layer = instance_create(0,0,oMenuLayer)
    layer.bg = bg
    layer.Child = layerObj
    layer.depth = depth
    layerObj.parent = id
    }
  uiSetClickable(alist,false)
  }
else if PHtp.clicked {
  instance_destroy(parent, true)
  room_goto(rHTP)
  }
else if PBack.clicked
  with parent.bNewGame {uiOnclick()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//init surfaces
if !surface_exists(ds)
  ds = surface_create(1500,900)
surface_set_target(ds)
draw_clear_alpha(0,0)
//draw hints
if PSolo.hover {
  drawTextPreset(fImpact64,c_white,1,fa_top,fa_left)
  draw_text_ext(600,30,'Play Word Ladder in singleplayer mode. Complete a simple task or begin a endless game.',80,800)
  }
else if PClient.hover {
  drawTextPreset(fImpact64,c_white,1,fa_top,fa_left)
  draw_text_ext(600,30,'Play Word Ladder with other players, icooperatively or aganist each other.',80,800)
  }
else if PHtp.hover {
  drawTextPreset(fImpact64,c_white,1,fa_top,fa_left)
  draw_text_ext(600,30,'Watch a demonstartion on how to play the Word Ladder game.',80,800)
  }
surface_reset_target()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
