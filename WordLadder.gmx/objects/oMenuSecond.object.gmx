<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Tech variables
OnclickEvent = 0
bg = -1             //square ruler
ruler = -1          //menu ruler
posIn = global.G_DOWN - 150
posOut = global.G_DOWN - 50
//Buttons init
bHide = instance_create(300,posOut,oButton)
bHide.content = 'SWITCH'
bHide.hintMsg = 'Enable interactive background' //todo unavailable if disabled in settings...
bHide.dsc = 0.66
bHide.tsc = 0.65
bHide.parent = id
bAccept = instance_create(300,posOut+100,oButton)
bAccept.content = 'ACCEPT'
bAccept.hintMsg = 'Apply some magic'
bAccept.dsc = 0.66
bAccept.tsc = 0.65
bAccept.parent = id
//Buttons anim
alist = ds_list_create()
ds_list_add(alist, bHide, bAccept)
Anim = false
AnimTick = 0
isInside = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//mem free
instance_destroy(bHide,true)
instance_destroy(bAccept,true)
ds_list_destroy(alist)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Anim {
  // move buttons
  AnimTick++
  var p = funcTickOffset(AnimTick, posIn, posOut, isInside);
  bHide  .y = p
  bAccept.y = p+100
  bHide  .sy = bHide.y
  bAccept.sy = bAccept.y
  //anim end: switch clickable
  if AnimTick &gt;= 10 {
    Anim = false
    AnimTick = 0
    isInside = funcBoolSwitch(isInside)
    bg.active = funcBoolSwitch(bg.active)
    if bg.active
      bHide.hintMsg = 'Disable interactive background'
    else
      bHide.hintMsg = 'Enable interactive background'
    uiSetClickable(alist, true)
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ui onclicke</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bHide.clicked {
  //bg activate and anim starts
  with ruler {
    active = funcBoolSwitch(active)
    Anim = true
    uiSetClickable(alist, false)
    }
  uiSetClickable(alist, false)
  Anim = true
  }
else if bAccept.clicked
  //cheat processow
  with bg {event_user(0)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
