<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>OnclickEvent = 0
//refresh baton
bRef = instance_create(300,100,oButton)
bRef.content = 'REFRESH'
bRef.dsc = 0.8
with bRef uiRescale(500)
//back baton
bBack = instance_create(300,800,oButton)
bBack.content = 'BACK'
//connect baton
bConnect = instance_create(1200,800,oButton)
bConnect.content = 'RANDOM ROOM'
with bConnect uiRescale(506)
//lines list
Lines = 0
LinesList[0] = -1
Selected = -1
//clickables list
alist = ds_list_create()
ds_list_add(alist, bRef, bBack, bConnect)
for (var i=0; i&lt;ds_list_size(alist); i++) {
  alist[|i].parent = id
  alist[|i].useParentSurface = true
  alist[|i].sx = alist[|i].x + 50
  alist[|i].sy = alist[|i].y + 180
  }
//ds
ds = surface_create(1500,900)
http_get(global.domain+'wl/roomList.php')
Loading = true
LoadRot = 0

//todo scroll pos!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(bRef, true)
instance_destroy(bBack, true)
instance_destroy(bConnect, true)
for (var i=0; i&lt;Lines; i++)
  instance_destroy(LinesList[i], true)
ds_list_destroy(alist)
if surface_exists(ds)
  surface_free(ds)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>LoadRot+= 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//not loaded
if async_load[? "status"] != 0
  exit
  
//response is loaded
var html = json_decode(async_load[? "result"])
if html != -1
  {
  Loading = false
  //roomlist answered
  if !is_undefined(html[?'COUNT'])
    {
    var ROOMS = html[?'ROOMS'];
    for (var i=0; i&lt;html[?'COUNT']; i++)  {
      var CURR_ROOM = ROOMS[|i];
      var gm = 'UNKNOWN';
      switch real(CURR_ROOM[?'GM']) {
        case 0: gm = 'COOPERATIVE'; break;
        case 1: gm = 'COMPEITIVE'; break;
        }
      LinesList[i] = instance_create(25, 275+i*75, oLine)
      LinesList[i].font = fCube
      LinesList[i].w = 1450
      LinesList[i].h = 36
      LinesList[i].sx = LinesList[i].x+50
      LinesList[i].sy = LinesList[i].y+180
      LinesList[i].parent = id
      LinesList[i].useParentSurface = true
      uiLineAddCol(LinesList[i], 0.0, string(CURR_ROOM[?'IP']))
      uiLineAddCol(LinesList[i], 0.4, string(CURR_ROOM[?'PNETID']))   //todo fix it
      uiLineAddCol(LinesList[i], 0.3, gm)
      uiLineAddCol(LinesList[i], 0.1, string(CURR_ROOM[?'PLS']))
      uiLineAddCol(LinesList[i], 0.1, string(CURR_ROOM[?'STATE']))
      uiLineAddCol(LinesList[i], 0.1, string(CURR_ROOM[?'WORDS']))
      Lines++
      }
    }
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//back
if bBack.clicked {
  with parent {
    Header = 'MULTIPLAYER'
    layer.Anim = true               //layer: destroy old
    layer.AnimType = 1
    layer.depth++
    layerObj = instance_create(0,0,oGameMulti) //layer: create new
    layer = instance_create(0,0,oMenuLayer)
    layer.bg = bg
    layer.Child = layerObj
    layer.depth = depth
    layerObj.parent = id
    }
  uiSetClickable(alist,false)
  }
//rand room
else if bConnect.clicked {
  if Lines &gt; 0 {
    var i = irandom(Lines);
    global.GameType = 0
    global.IP = LinesList[i].cc[0]
    instance_destroy(parent, true)
    room_goto(rGame)
    }
  }
//refresh
else if bRef.clicked {
  for (var i=0; i&lt;Lines; i++)
    instance_destroy(LinesList[i], true)
  Lines = 0
  LinesList[0] = -1
  Selected = -1
  http_get(global.domain+'wl/roomList.php')
  }
else
  for (var i=0; i&lt;Lines; i++)
    if LinesList[i].clicked {
      global.GameType = 0
      global.IP = LinesList[i].cc[0]
      instance_destroy(parent, true)
      room_goto(rGame)
      }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//init surfaces
if !surface_exists(ds)
  ds = surface_create(1500,900)
surface_set_target(ds)
draw_clear_alpha(0,0)
//draw captions
drawTextPreset(fCube,c_white,1,fa_left,fa_center)
draw_text(25, 200, 'Game Host')
draw_text(600, 200, 'Gamemode')
draw_text(1000,200, 'Plrs')
draw_text(1150,200, 'State')
draw_text(1300,200, 'Words')
//draw loading
if Loading 
  drawLoading(LoadRot,1400,80)
surface_reset_target()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
