<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>GameTypeID = -1             //gametype changed after creating ig gameGeneralObjCreate
OnclickEvent = 3
//game's counters
pp = 0                      //score
words = 0
letters = 0                 //total
lettersa = 0                //accepted
lettersb = 0                //backspaced
attempts = 0                //input attempts
ticks = 0                   //gametime
hints = 0                   //abilities
shiftsa = 0
shiftsu = 0
unbansa = 0
unbansu = 0
banned = 0                  //banned letters total
tabus = 0                   //fails
dicts = 0
prevs = 0
lens = 0
targets = 0                 //green letters
targetsa = 0                //green accepted
decrements = 0              //word length decs bonus
//text scale
sc = 1
//targets completed?
success = false
//tech active swithes
active = false              //true = gameover
B1 = -1                     //"back" button
s = ''                      //content
sCaption = ''
ShowPage = 0                //0: general;  1: letters;  2: abilities;  3: fails
ShowPageTick = 0
ShowPageSpeed = 1
//TODO more stats
//wordmap stored
LenMap = ds_map_create()
ds_map_clear(LenMap)
LenWord = ''
//special page #5
sSpec[0] = ''
sSpec[1] = ''
sSpec[2] = ''

//todo: refactor stat obj. Net -&gt; custom stat counter
Net = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active {
  ShowPageTick+= ShowPageSpeed
  if ShowPageTick == 420 {
    ShowPage++
    event_user(1)
    ShowPageTick = 0
    }
  //TODO hilights
  }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Switch showpage</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if B1 &gt; 0 
  if mouse_y &lt; 1035 {   // @back button on bottom?
    if mouse_x &gt; 800
      ShowPage++
    else
      ShowPage--
    ShowPageTick = 0
    ShowPageSpeed = 0.25
    event_user(1)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if B1 &gt; 0
  if B1.clicked {
    funcProfileWrite()  //todo why not in event_user0? Data loss if altf4 from endgame screen
    funcSendProfile()
    instance_destroy(self,true)
    if Net != -1
      instance_destroy(Net, true)
    room_goto(rMenu)
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>buttn pressed</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Word -&gt; stat</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//LenMap word add
LenCurr = LenMap[?string_length(LenWord)]
if is_undefined(LenCurr)
  {
  LenCurr = ds_map_create()
  ds_map_clear(LenCurr)
  for (tmp=0; tmp&lt;26; tmp++)
    LenCurr[?funcChrDecode(tmp)] = 0
  LenMap[?string_length(LenWord)] = LenCurr
  }
LenCurr[?ord(string_char_at(LenWord,1))]++

//debug
//clipboard_set_text(json_encode(LenMap))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ShowPage changing</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//ShowPage increment
if ShowPage &lt; 0
  ShowPage = 5
else if ShowPage &gt; 5
  ShowPage = 0
switch ShowPage
  {
  case 1:
    sCaption = 'LETTERS'
    s = 'TYPED TOTAL: '     + string(letters)
    s+= '#ACCEPTED: '       + string(lettersa)
    s+= '#BACKSPACED: '     + string(lettersb)
    s+= '#GREENS: '         + string(targetsa)
    s+= '#INPUT ATTEMPTS: ' + string(attempts)
    s+= '#LETTERS BANNED: ' + string(banned)
    sc = 1
    break
  case 2:
    sCaption = 'SPECIAL ABILITIES'
    s = 'HINTS SHOWN: '      + string(hints)
    s+= '#SHIFTS ACQUIRED: ' + string(shiftsa)
    s+= '#SHIFTS USED: '     + string(shiftsu)
    s+= '#UNBANS ACQUIRED: ' + string(unbansa)
    s+= '#UNBANS USED: '     + string(unbansu)
    s+= '#LENGTH DECREMENTS: ' + string(decrements)
    sc = 1
    break
  case 3:
    sCaption = 'WRONG WORDS'
    s = 'TYPOS: '      + string(dicts)
    s+= '#REPEATS: '   + string(prevs)
    s+= '#TABOOS: '    + string(tabus)
    s+= '#TOOSHORTS: ' + string(lens)
    sc = 1
    break
  case 4:
    sCaption = "WORD'S LENGTH"
    var lines = 2
    var src = ds_map_find_first(LenMap);      //src = key
    var dest;                                 //dest = map
    var qty;
    s = ''
    while (!is_undefined(src))
      {
      qty = 0;
      dest = LenMap[?src]
      for(i=0; i&lt;26; i++)
        qty+= dest[?funcChrDecode(i)]
      s+= string(src) + ': ' + string(qty) + '#'
      lines++
      src = ds_map_find_next(LenMap,src)
      }
    if lines &gt; 6
      sc = (6+lines/10) / lines
    else
      sc = 1
    break
  case 5:
    sCaption = "WORD THAT START WITH"
    sSpec[0] = '##'
    sSpec[1] = '##'
    sSpec[2] = '##'
    var pos = 0;
    for(i=0; i&lt;26; i++)
      {
      var src = ds_map_find_first(LenMap);
      var dest;
      var qty = 0;
      while (!is_undefined(src))
        {
        dest = LenMap[?src]
        qty+= dest[?funcChrDecode(i)]
        src = ds_map_find_next(LenMap,src)
        }
      sSpec[pos]+= chr(funcChrDecode(i)) + ': ' + string(qty) + '#'
      pos++
      if pos &gt; 2
        {
        pos = 0
        s+= '#'
        }
      }
    sSpec[2]+= '#'
    sc = 0.65
    break
  default:
    sCaption = 'OVERALL RATE'
    s = 'PLAYTIME: '             + formatTimeString(ticks)
    s+= '#ACCEPTED WORDS: '      + string(words)
    s+= '#TOTAL LETTERS TYPED: ' + string(letters)
    s+= '#SCORE: '               + string(pp)
    sc = 1
  }
ShowPageSpeed = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Gameover event</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//gameover event
instance_create(0,0,oFlashFx)
B1 = instance_create(800,1100,oButton)  //TODO checlk gamemode
B1.content = 'BACK'
B1.parent = id
active = true
//default page
sCaption = 'OVERALL RATE'
s =  'PLAYTIME: '            + formatTimeString(ticks)
s+= '#ACCEPTED WORDS: '      + string(words)
s+= '#TOTAL LETTERS TYPED: ' + string(letters)
s+= '#SCORE: '               + string(pp)
//global stat fields
global.profile[?'PSENDS']++
global.profile[?'PSXP']+= pp
//Profile Stat Write
//Current gamemode last game
SECTMAP = global.profile[?'PSSECTIONS']
CURRMAP = SECTMAP[?GameTypeID+1]
if is_undefined(CURRMAP) {
  CURRMAP = ds_map_create()               //create if gamemode datamap !exists
  ds_map_clear(CURRMAP)
  SECTMAP[?GameTypeID+1] = CURRMAP
  }
CURRMAP[?'PSPLAYTIME'] = ticks
CURRMAP[?'PSGAMES'] = 1
CURRMAP[?'PSWORDS'] = words
CURRMAP[?'PSINPUTS'] = attempts
CURRMAP[?'PSLETTERS'] = letters
CURRMAP[?'PSLETTERSA'] = lettersa
CURRMAP[?'PSLETTERSB'] = lettersb
CURRMAP[?'PSHINTS'] = hints
CURRMAP[?'PSSHIFTSA'] = shiftsa
CURRMAP[?'PSSHIFTSU'] = shiftsu
CURRMAP[?'PSBANNED'] = banned
CURRMAP[?'PSUNBANSA'] = unbansa
CURRMAP[?'PSUNBANSU'] = unbansu
CURRMAP[?'PSBANTYPED'] = tabus
CURRMAP[?'PSSHORTTYPED'] = lens
CURRMAP[?'PSWRONGTYPED'] = dicts
CURRMAP[?'PSREPTYPED'] = prevs
CURRMAP[?'PSGREENS'] = targets
CURRMAP[?'PSGREENSTYPED'] = targetsa
CURRMAP[?'PSDECREMENTS'] = decrements
CURRMAP[?'PSLASTSCORE'] = pp
CURRMAP[?'PSLENGTHMAP'] = ds_map_create()
ds_map_copy(CURRMAP[?'PSLENGTHMAP'], LenMap)

//OVERALL GAMEMODE
OVERMAP = SECTMAP[?GameTypeID]
if is_undefined(OVERMAP) {
  OVERMAP = ds_map_create()
  ds_map_copy(OVERMAP,SECTMAP[?GameTypeID+1])
  SECTMAP[?GameTypeID] = OVERMAP
  }
else {
  OVERMAP[?'PSPLAYTIME']+= CURRMAP[?'PSPLAYTIME']
  OVERMAP[?'PSGAMES']+= CURRMAP[?'PSGAMES']
  OVERMAP[?'PSWORDS']+= CURRMAP[?'PSWORDS']
  OVERMAP[?'PSINPUTS']+= CURRMAP[?'PSINPUTS']
  OVERMAP[?'PSLETTERS']+= CURRMAP[?'PSLETTERS']
  OVERMAP[?'PSLETTERSA']+= CURRMAP[?'PSLETTERSA']
  OVERMAP[?'PSLETTERSB']+= CURRMAP[?'PSLETTERSB']
  OVERMAP[?'PSHINTS']+= CURRMAP[?'PSHINTS']
  OVERMAP[?'PSSHIFTSA']+= CURRMAP[?'PSSHIFTSA']
  OVERMAP[?'PSSHIFTSU']+= CURRMAP[?'PSSHIFTSU']
  OVERMAP[?'PSBANNED']+= CURRMAP[?'PSBANNED']
  OVERMAP[?'PSUNBANSA']+= CURRMAP[?'PSUNBANSA']
  OVERMAP[?'PSUNBANSU']+= CURRMAP[?'PSUNBANSU']
  OVERMAP[?'PSBANTYPED']+= CURRMAP[?'PSBANTYPED']
  OVERMAP[?'PSSHORTTYPED']+= CURRMAP[?'PSSHORTTYPED']
  OVERMAP[?'PSWRONGTYPED']+= CURRMAP[?'PSWRONGTYPED']
  OVERMAP[?'PSREPTYPED']+= CURRMAP[?'PSREPTYPED']
  OVERMAP[?'PSLASTSCORE']+= CURRMAP[?'PSLASTSCORE']
  //TODO DEBUG LETTERS
  OVERMAP = OVERMAP[?'PSLENGTHMAP']
  var src = ds_map_find_first(LenMap);      //src = key
  var dest;                                 //dest = map
  while (!is_undefined(src))
    {
    dest = OVERMAP[?src]
    if is_undefined(dest)
      {
      dest = ds_map_create()
      ds_map_copy(dest,LenMap[?src])
      ds_map_add(OVERMAP,src,dest)
      }
    else
      {
      tmp = LenMap[?src]
      for(i=0; i&lt;26; i++)
        dest[?funcChrDecode(i)]+= tmp[?funcChrDecode(i)]
      }
    src = ds_map_find_next(LenMap,src)
    }
  }
  
//OVERALL GAME
OVERMAP = SECTMAP[?0]
if is_undefined(OVERMAP) {
  OVERMAP = ds_map_create()
  ds_map_copy(OVERMAP,SECTMAP[?GameTypeID+1])
  SECTMAP[?0] = OVERMAP
  }
else {
  OVERMAP[?'PSPLAYTIME']+= CURRMAP[?'PSPLAYTIME']
  OVERMAP[?'PSGAMES']+= CURRMAP[?'PSGAMES']
  OVERMAP[?'PSWORDS']+= CURRMAP[?'PSWORDS']
  OVERMAP[?'PSINPUTS']+= CURRMAP[?'PSINPUTS']
  OVERMAP[?'PSLETTERS']+= CURRMAP[?'PSLETTERS']
  OVERMAP[?'PSLETTERSA']+= CURRMAP[?'PSLETTERSA']
  OVERMAP[?'PSLETTERSB']+= CURRMAP[?'PSLETTERSB']
  OVERMAP[?'PSHINTS']+= CURRMAP[?'PSHINTS']
  OVERMAP[?'PSSHIFTSA']+= CURRMAP[?'PSSHIFTSA']
  OVERMAP[?'PSSHIFTSU']+= CURRMAP[?'PSSHIFTSU']
  OVERMAP[?'PSBANNED']+= CURRMAP[?'PSBANNED']
  OVERMAP[?'PSUNBANSA']+= CURRMAP[?'PSUNBANSA']
  OVERMAP[?'PSUNBANSU']+= CURRMAP[?'PSUNBANSU']
  OVERMAP[?'PSBANTYPED']+= CURRMAP[?'PSBANTYPED']
  OVERMAP[?'PSSHORTTYPED']+= CURRMAP[?'PSSHORTTYPED']
  OVERMAP[?'PSWRONGTYPED']+= CURRMAP[?'PSWRONGTYPED']
  OVERMAP[?'PSREPTYPED']+= CURRMAP[?'PSREPTYPED']
  OVERMAP[?'PSLASTSCORE']+= CURRMAP[?'PSLASTSCORE']
  OVERMAP = OVERMAP[?'PSLENGTHMAP']
  var src = ds_map_find_first(LenMap);      //src = key
  var dest;                                 //dest = map
  while (!is_undefined(src))
    {
    dest = OVERMAP[?src]
    if is_undefined(dest)
      {
      dest = ds_map_create()
      ds_map_copy(dest,LenMap[?src])
      ds_map_add(OVERMAP,src,dest)
      }
    else
      {
      tmp = LenMap[?src]
      for(i=0; i&lt;26; i++)
        dest[?funcChrDecode(i)]+= tmp[?funcChrDecode(i)]
      }
    src = ds_map_find_next(LenMap,src)
    }
  }
  
//best game section
OVERMAP = SECTMAP[?GameTypeID+2]
if is_undefined(OVERMAP) {
  OVERMAP = ds_map_create()
  ds_map_copy(OVERMAP,SECTMAP[?GameTypeID+1])
  SECTMAP[?GameTypeID+2] = OVERMAP
  }
else 
  if OVERMAP[?'PSLASTSCORE'] &lt; CURRMAP[?'PSLASTSCORE'] {
    ds_map_copy(OVERMAP,SECTMAP[?GameTypeID+1])
    SECTMAP[?GameTypeID+2] = OVERMAP
    }
    
//MEGA TODO: mem free!
//mem free entire gameroom!!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active {
  drawTextPreset(fImpact64, c_white, 1, fa_left, fa_center)
  //draw stats
  if ShowPage == 5
    {
    draw_text_transformed(70,620,sSpec[0],sc,sc,0)
    draw_text_transformed(250,620,sSpec[1],sc,sc,0)
    draw_text_transformed(430,620,sSpec[2],sc,sc,0)
    }
  else
    draw_text_transformed(100,620,s,sc,sc,0)
  //draw caption 
  draw_set_font(fImpact96)
  draw_text(150,260,sCaption)
  //draw success caption
  if success {
    draw_set_font(fImpact96)
    draw_set_halign(fa_center)
    draw_text(800,80,'SUCCESS')
    }
  //draw pages list
  for (var i=0; i&lt;=5; i++) {
    if i == ShowPage
      draw_set_alpha(1)
    else
      draw_set_alpha(0.5)
    draw_circle(680+i*40,990,15,false)
    }
  //get op for pages list arrows
  var op = 0;
  if mouse_x &lt; 800
    op = 1
  else
    op = 0.5
  //draw arrows
  draw_sprite_ext(sArrowScroll,0,640,990,1,1,180,c_white,op)
  draw_sprite_ext(sArrowScroll,0,920,990,1,1,0,c_white,1.5-op)
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
